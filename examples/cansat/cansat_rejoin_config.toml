# System Name
name = "Can Satellite Constellation"

# directory to output ROSmsg codecs
codec_dir = "codec"

# directory to send CSAF output
output_dir = "output"

# Order to Construct/Evaluate Components
evaluation_order = ["controller", "can0", "can1", "can2", "can3"]

# File to Log Results
log_file = "cansat_constellation.log"

# Log Level (info/debug)
log_level = "info"

[components]

  [components.controller]
    # environment to run under
    run_command = "python3"

    # path to model executable
    process = "controller.py"

    # whether to print debug diagnostics
    debug = false

    # subscribe to topic of a component (component name, topic name)
    sub = [["can0", "states"],
    ["can1", "states"],
    ["can2", "states"],
    ["can3", "states"]]

    # port to publish
    pub = 5502

  [components.can0]
    # environment to run under
    run_command = "python3"

    # path to model executable
    process = "satplant.py"

    # subscribe to topic of a component (component name, topic name)
    sub = [["controller", "forces0"]]

    # port to publish
    pub = 5503


  [components.can1]
    # environment to run under
    run_command = "python3"

    # path to model executable
    process = "satplant.py"

    # subscribe to topic of a component (component name, topic name)
    sub = [["controller", "forces1"]]

    # port to publish
    pub = 5504


  [components.can2]
    # environment to run under
    run_command = "python3"

    # path to model executable
    process = "satplant.py"

    # subscribe to topic of a component (component name, topic name)
    sub = [["controller", "forces2"]]

    # port to publish
    pub = 5505


  [components.can3]
    # environment to run under
    run_command = "python3"

    # path to model executable
    process = "satplant.py"

    # subscribe to topic of a component (component name, topic name)
    sub = [["controller", "forces3"]]

    # port to publish
    pub = 5506