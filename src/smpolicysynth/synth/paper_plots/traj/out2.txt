python -m synth.main.synth car_0_0_1
Error: IPOPT shared library failed to import
np seed:  2166012765
random seed:  2560573572653054095
Iteration 0
Init states
[ 1.0238519   5.21        1.56714754 12.58179927]
[ 1.02452422  5.21        1.54316104 13.16798934]
[ 0.9657293   5.21        1.59810004 12.75179826]
[ 0.98026193  5.21        1.58020259 12.37099615]
[ 0.97858052  5.21        1.59528691 12.48741882]
[ 1.03131443  5.21        1.59938648 12.0646275 ]
[ 1.01025575  5.21        1.53289216 12.91368628]
[ 0.99734558  5.21        1.55564388 12.26793856]
[ 0.99715465  5.21        1.54593759 13.0260086 ]
[ 1.01547098  5.21        1.5881227  12.55517185]
Initial sampling of trajectories
Optimizing trajectories for safe goal
Random inits:  [False, False, False, False, False, False, False, False, False, False]
Mode weights:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Cond weights:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Init cost:  1026.017839866528
Init cost:  412.4133008875841
Init cost:  1220.5002710052925
Init cost:  226.5165513896121
Init cost:  155.3200361677802
Init cost:  409.8043977528771
Init cost:  67.72117528110144
Init cost:  397.14515944865553
Init cost:  30.824316241061425
Init cost:  570.8323012505416
1.925014456938513 2
Init cost:  1.7851975862562497
1.6193560370666267 4
Init cost:  2.730244937231909
Final:  1.4029738772089788 4
Final:  1.6330475554833532 2
0.1737576883071757 8
Init cost:  0.7357635380822961
0.12013556026025964 0
Init cost:  0.13003478192754675
0.3762706859827584 1
Init cost:  0.9849335238440334
Final:  0.28119136248111337 1
Final:  0.11400002957007996 0
0.11557896745919312 7
Init cost:  0.056514651519938765
Final:  0.08146685838089558 8
2.3676468591371402 3
Init cost:  2.29052216928284
Final:  0.05222050403169806 7
0.9963524820704731 9
Init cost:  2.488906602849549
Final:  2.080944338475784 3
Final:  1.080254738143336 9
1.3298906187935762 5
Init cost:  1.4242584868161614
1.005012998385231 6
Init cost:  1.0050129966834593
Final:  1.2799658939776002 5
Final:  1.0048862346398384 6
Weights:  [1.0, 0.12156787289136572, 1.1040227758835731e-07, 1.7820456389920567e-09, 1.5348699281259086e-06, 6.120251464383623e-06, 0.0001533896918976787, 1.0, 1.0, 0.00012374522001196823]
Traj x:  [ 4.08833750e+00  3.44478532e+00 -5.21160488e-01 -2.31628942e+00
  9.19982914e-01  3.12865451e+00  1.89800985e+00  4.30553252e+00
  3.15844395e+00 -1.80392144e+00 -1.97174944e+00  1.11777798e+00
  4.45094559e+00 -2.05730183e+00 -1.03935982e+00  3.01687689e-01
  1.22613549e+00  8.41474799e+00  1.53110206e+00  4.64974520e+00
  2.16440099e+00  6.12882189e+00  4.38505377e+00  1.44050579e-20]
Traj x:  [ 1.37022272e+00  5.00000000e+00 -1.09368391e+00 -4.15674006e-01
 -7.38469943e-01  5.65709059e-02  2.93620472e+00 -9.63298108e-01
 -8.25394844e-02  5.66071122e-02 -9.00415371e-02 -9.76887258e-01
  2.67382893e+00 -2.90603700e+00 -1.77242429e+00  1.84865511e+00
  8.24846517e+00 -4.07651319e-17  4.99816509e-18  2.91014643e+00
 -3.82136467e-19  1.63163467e-18  6.29718483e+00  1.59980503e-01]
Traj x:  [ 1.24868373e+00  9.60081844e-01  4.24579157e-01 -4.58316005e-01
 -1.13930175e-01  4.64044210e-01  2.26992274e-01 -3.13695071e-01
  2.82076682e-01 -1.22667527e+00 -6.12544099e-01 -1.45256839e-01
  1.25167620e-01 -2.29438893e-01 -1.73218744e-01  8.77972417e-01
  3.35856391e+00  2.28621499e+00 -2.22324499e-12  3.04849306e-04
  2.13827355e+00  7.77101867e-06  1.43930750e-04  3.04631128e-06]
Traj x:  [-3.99018686e-02 -3.48904928e+00 -4.19415208e-05  4.55757800e+00
  2.87406021e+00  5.00000000e+00  3.63374118e+00 -4.55571202e+00
  2.88718140e+00 -4.31199166e-01 -1.87743233e+00  3.17367490e-01
  2.33867419e+00  7.15277653e-02  1.23076589e+00  3.02260519e+00
  9.87415429e-02  3.98233248e-18  4.54774729e+00  3.49748696e+00
  2.43871083e-17  8.45451140e+00  6.49263323e-18  6.82595929e-18]
Traj x:  [ 2.86853365e-01  3.31650291e+00  4.30883547e-01  5.00000000e+00
  2.04076012e+00  5.00000000e+00 -2.03774532e+00 -3.35279905e+00
  3.69151307e+00 -1.62042157e+00 -1.05699991e+00  2.97914295e+00
 -2.21865296e+00  5.90941447e-01 -8.75908311e-01  3.10523488e-01
  2.91243876e-01  2.55339839e-01  3.78100901e+00  2.39400859e+00
  9.31540517e+00  2.52719413e-02  4.56792854e-03  1.57209315e-16]
Traj x:  [ 8.66589941e-01  5.00000000e+00  1.64476941e+00  1.58781949e+00
 -6.04688474e-01 -4.99991041e+00  2.08121021e-02 -2.33194292e+00
  8.81804226e-01  5.00000000e+00 -1.83463566e+00 -3.51196866e+00
  1.06905463e+00  2.08837752e+00  2.34028311e+00 -5.00000000e+00
  8.06105333e-01  1.79876749e+00  5.35608816e+00  2.74055202e-04
  4.76153220e+00  1.56333256e+00  2.99130104e+00  2.61638832e+00]
Traj x:  [ 4.02861479e-01  1.58253201e+00  1.60805763e+00  8.19744698e-01
  3.77436462e-01 -1.63921094e+00 -3.55590434e+00 -4.99816349e+00
  6.19978479e-01  4.97984602e+00  1.40540332e-01  3.56475701e+00
  1.77400841e+00 -4.99999987e+00 -1.40205805e-01  3.44804597e-01
  5.55315708e+00  1.48109967e+00  3.77109418e+00  1.62832756e+00
  6.91021092e+00  9.31738551e+00  2.99706202e+00 -5.22839902e-12]
Traj x:  [ 9.02467036e-01  4.97054136e+00 -1.05494029e+00 -2.30522386e+00
  1.79010725e+00  4.99993957e+00  4.94327430e+00 -4.99998302e+00
 -9.39261175e-01 -3.35495438e+00 -1.50413980e-02 -1.18368261e+00
 -1.19205918e+00 -3.58420909e-02  9.44538803e-01 -7.62596914e-02
  4.02053852e+00  2.91623563e+00  3.95342301e+00  2.16492886e+00
 -6.60790866e-19 -1.33966623e-18  1.57064466e-18 -1.61190505e-19]
Traj x:  [ 1.84137363e+00  5.20028093e-01 -1.44012478e+00 -2.16310600e+00
 -8.08067053e-02 -1.05862342e+00  1.88527283e+00  4.25611729e+00
  3.95953100e+00 -1.22197453e+00  2.61154806e+00 -1.03322592e+00
  2.31037674e+00 -8.89550594e-01 -1.32835506e+00 -8.96235492e-01
  3.18272204e+00  3.96106721e+00  1.24252773e-18  4.20255398e+00
  9.00251066e+00  1.29045837e-02  4.95612613e-03 -1.02286993e-18]
Traj x:  [ 0.65777671  5.          1.5021134   5.          2.08370487  4.99993508
 -2.00287601  0.18607809 -0.6558113   1.0003236   4.36236304 -3.02194234
  2.42463787 -1.28923309 -2.03875129  3.4330133   0.17440653  0.27756092
  7.51542491  0.92339133  6.15270701  3.57664539  2.59672755  2.93911229]
Learn mode mapping
Assigning modes
Merging modes
Avg modes:  [ 1.81637994  3.62925792  3.49522316 -2.32158187 -1.26846558 -1.37553482]
Assigning modes
Merging modes
Avg modes:  [ 1.88430165  3.80302111  3.83526434 -2.29209955 -1.26975561 -1.31923023]
Assigning modes
Merging modes
Avg modes:  [ 1.89338496  3.81378192  3.91384926 -2.28986838 -1.2623489  -1.32144159]
Traj 0
[ 4.0883375   3.44478532 -0.52116049 -2.31628942  0.91998291  3.12865451
  1.89800985  4.30553252  3.15844395 -1.80392144 -1.97174944  1.11777798
  4.45094559 -2.05730183]
[0.00012261 0.00084147 0.00015311 0.00046497 0.00021644 0.00061288
 0.00043851]
(6,1,0.999995)->(5,2,0.999106)->(4,1,0.999861)->(3,0,0.999983)->(2,0,0.999940)->(1,2,0.999658)->(0,0,0.992550)->
Traj 1
[ 1.37022272  5.          2.93620472 -0.96329811  2.67382893 -2.906037
 -1.77242429  1.84865511]
[8.24846517e-04 2.91014643e-04 6.29718483e-04 1.59980503e-05]
(3,2,0.992669)->(2,1,0.999993)->(1,1,0.996601)->(0,0,0.999999)->
Traj 2
[ 1.24868373  0.96008184  0.42457916 -0.458316    0.28207668 -1.22667527]
[0.00033586 0.00022862 0.00021383]
(2,2,0.887356)->(1,2,0.578836)->(0,0,0.963644)->
Traj 3
[ 2.87406021  5.          3.63374118 -4.55571202 -1.87743233  0.31736749]
[0.00045477 0.00034975 0.00084545]
(2,2,0.999875)->(1,1,1.000000)->(0,0,0.999981)->
Traj 4
[ 0.28685337  3.31650291  0.43088355  5.          2.04076012  5.
 -2.03774532 -3.35279905  3.69151307 -1.62042157]
[2.91243876e-05 2.55339839e-05 3.78100901e-04 2.39400859e-04
 9.31540517e-04]
(4,1,0.999904)->(3,2,1.000000)->(2,0,0.999996)->(1,0,0.999995)->(0,0,0.999495)->
Traj 5
[ 0.86658994  5.          1.64476941  1.58781949 -0.60468847 -4.99991041
  0.88180423  5.         -1.83463566 -3.51196866  1.06905463  2.08837752
  2.34028311 -5.        ]
[8.06105333e-05 1.79876749e-04 5.35608816e-04 4.76153220e-04
 1.56333256e-04 2.99130104e-04 2.61638832e-04]
(6,1,1.000000)->(5,0,0.998863)->(4,2,0.999999)->(3,0,0.999999)->(2,2,0.999380)->(1,0,0.987744)->(0,0,0.999999)->
Traj 6
[ 0.40286148  1.58253201  1.60805763  0.8197447   0.37743646 -1.63921094
 -3.55590434 -4.99816349  0.61997848  4.97984602  0.14054033  3.56475701
  1.77400841 -4.99999987]
[0.00055532 0.00014811 0.00037711 0.00016283 0.00069102 0.00093174
 0.00029971]
(6,1,1.000000)->(5,0,0.999207)->(4,0,0.999998)->(3,2,1.000000)->(2,2,0.761112)->(1,0,0.903346)->(0,0,0.986191)->
Traj 7
[ 0.90246704  4.97054136 -1.05494029 -2.30522386  1.79010725  4.99993957
  4.9432743  -4.99998302]
[0.00040205 0.00029162 0.00039534 0.00021649]
(3,1,1.000000)->(2,0,0.999997)->(1,2,0.999985)->(0,0,0.999999)->
Traj 8
[ 1.84137363  0.52002809 -1.44012478 -2.163106    1.88527283  4.25611729
  3.959531   -1.22197453]
[0.00031827 0.00039611 0.00042026 0.00090025]
(3,1,0.999780)->(2,0,0.999982)->(1,2,0.999998)->(0,0,0.716979)->
Traj 9
[ 0.65777671  5.          1.5021134   5.          2.08370487  4.99993508
 -2.00287601  0.18607809 -0.6558113   1.0003236   4.36236304 -3.02194234
  2.42463787 -1.28923309 -2.03875129  3.4330133 ]
[1.74406530e-05 2.77560925e-05 7.51542491e-04 9.23391331e-05
 6.15270701e-04 3.57664539e-04 2.59672755e-04 2.93911229e-04]
(7,2,0.829406)->(6,1,0.997044)->(5,1,1.000000)->(4,2,0.970534)->(3,2,0.999925)->(2,0,0.999995)->(1,0,0.999998)->(0,0,0.999999)->
Mode mapping:  {0: {6: array([5.23933943e-06, 9.99994761e-01, 4.59607559e-26]), 5: array([8.93646782e-04, 9.82641916e-08, 9.99106255e-01]), 4: array([1.39134275e-04, 9.99860866e-01, 9.77165214e-16]), 3: array([9.99983341e-01, 1.66594640e-05, 1.90972464e-11]), 2: array([9.99940374e-01, 5.48198798e-05, 4.80650838e-06]), 1: array([5.04156040e-06, 3.36623139e-04, 9.99658335e-01]), 0: array([9.92550226e-01, 7.44977435e-03, 2.95906690e-24])}, 1: {3: array([7.33047265e-03, 1.38785512e-07, 9.92669389e-01]), 2: array([7.25166315e-06, 9.99992748e-01, 1.39906623e-12]), 1: array([3.39924048e-03, 9.96600760e-01, 5.04978230e-14]), 0: array([9.99998682e-01, 1.31638784e-06, 1.33337824e-09])}, 2: {2: array([0.01514563, 0.09749872, 0.88735565]), 1: array([0.24987718, 0.17128647, 0.57883635]), 0: array([9.63643755e-01, 3.63146592e-02, 4.15853981e-05])}, 3: {2: array([1.24705824e-04, 1.71809554e-07, 9.99875122e-01]), 1: array([2.71806653e-09, 9.99999997e-01, 8.49910743e-20]), 0: array([9.99980629e-01, 1.93708228e-05, 1.94259297e-17])}, 4: {4: array([9.64245395e-05, 9.99903575e-01, 1.04086033e-19]), 3: array([2.05447628e-09, 4.68309319e-07, 9.99999530e-01]), 2: array([9.99995692e-01, 4.30814099e-06, 8.95043042e-13]), 1: array([9.99994716e-01, 2.59247401e-07, 5.02434685e-06]), 0: array([9.99495130e-01, 1.14494923e-05, 4.93420846e-04])}, 5: {6: array([5.14797995e-09, 9.99999995e-01, 7.86845769e-11]), 5: array([9.98863417e-01, 1.12244552e-03, 1.41377325e-05]), 4: array([1.58529646e-09, 8.95017614e-07, 9.99999103e-01]), 3: array([9.99999308e-01, 5.62581777e-07, 1.29108903e-07]), 2: array([5.18529753e-10, 6.20304872e-04, 9.99379695e-01]), 1: array([9.87744242e-01, 1.22556054e-02, 1.52539813e-07]), 0: array([9.99999305e-01, 5.47979616e-07, 1.47372737e-07])}, 6: {6: array([1.41450095e-08, 9.99999811e-01, 1.75161116e-07]), 5: array([9.99206619e-01, 4.78157878e-06, 7.88598977e-04]), 4: array([9.99998423e-01, 3.75024993e-07, 1.20220328e-06]), 3: array([3.91538150e-11, 4.29221222e-07, 9.99999571e-01]), 2: array([0.00772965, 0.23115811, 0.76111224]), 1: array([9.03345773e-01, 9.66527731e-02, 1.45350761e-06]), 0: array([0.9861913 , 0.00143881, 0.0123699 ])}, 7: {3: array([4.05957177e-11, 1.00000000e+00, 4.81077857e-31]), 2: array([9.99997241e-01, 2.75920142e-06, 1.57947198e-11]), 1: array([5.26293401e-07, 1.40205714e-05, 9.99985453e-01]), 0: array([9.99999263e-01, 6.23151260e-07, 1.14220168e-07])}, 8: {3: array([2.19975455e-04, 9.99780025e-01, 8.84161561e-22]), 2: array([9.99981685e-01, 1.83152803e-05, 2.44676758e-11]), 1: array([2.47947210e-07, 2.15726023e-06, 9.99997595e-01]), 0: array([7.16979208e-01, 2.83020595e-01, 1.96752243e-07])}, 9: {7: array([1.70593570e-01, 3.17360890e-08, 8.29406398e-01]), 6: array([2.95582639e-03, 9.97044174e-01, 1.11083506e-10]), 5: array([2.08921701e-07, 9.99999791e-01, 1.80567037e-25]), 4: array([2.94271058e-02, 3.86236213e-05, 9.70534271e-01]), 3: array([7.49718586e-05, 1.26184519e-07, 9.99924902e-01]), 2: array([9.99995348e-01, 4.65208769e-06, 5.38355645e-13]), 1: array([9.99998340e-01, 1.65930999e-06, 3.48053983e-10]), 0: array([9.99998766e-01, 3.82378788e-07, 8.51482473e-07])}}
Learning switch conds
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
-1->2
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 4.4923618385488595]) 1.8065041181315492e-06
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -0.5688945849312175]) 3.705870658682633e-06
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -2.38487627378516]) 5.093252897108326e-06
Cond:  LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 4.4923618385488595])
Cost:  1.8065041181315492e-06
-1->1
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.3099999990712305]) 0.05809427784420052
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.110000001699715]) 0.05809427980310487
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, 0.8971546536915813]) 0.05829320365291919
Cond:  LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.3099999990712305])
Cost:  0.05809427784420052
-1->0
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.109999986627561]) 0.058094721252134864
LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -0.8971546489714814]) 0.0582936708916859
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -0.08840183459088871]) 0.058514437163455
Cond:  LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.109999986627561])
Cost:  0.058094721252134864
0->2
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 0.4837481371028214]) 63.325472976634856
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -1.973828981035041]) 75.2107141816072
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 8.201153827196435]) 111.40910460099462
Cond:  LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 0.4837481371028214])
Cost:  63.325472976634856
0->1
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -1.0099523275200313]) 21.332882032283177
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -3.217382765054369]) 26.700361483499677
LinearCond([0.0, 0.0, 1.0, 0.0, 0.0, -10.293989848303912]) 27.574375911720644
Cond:  LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -1.0099523275200313])
Cost:  21.332882032283177
0->-2
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -18.960118039455818]) 0.03829256706732832
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -14.946093067204217]) 0.039252833429355545
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.3572263572588295]) 0.040294723229813645
Cond:  LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -18.960118039455818])
Cost:  0.03829256706732832
1->-2
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 8.005767981464764]) 14.930215840804953
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 0.4856271185613083]) 45.78883506660625
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -14.949771576260765]) 66.42493210477203
Cond:  LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 8.005767981464764])
Cost:  14.930215840804953
1->2
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -2.5835102489902972]) 34.28590691159356
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.945261240167094]) 53.97999867275597
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, -1.394312673776433]) 57.29327207459454
Cond:  LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -2.5835102489902972])
Cost:  34.28590691159356
1->0
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 0.683236883025998]) 0.11672713837993044
LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -2.703523911497138]) 11.120906633188737
LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -0.9280835161461809]) 11.42540864519214
Cond:  LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 0.683236883025998])
Cost:  0.11672713837993044
2->1
LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -4.017023606085511]) 35.252794823852994
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 3.316801531829203]) 36.59782393821716
LinearCond([0.0, 0.0, 1.0, 0.0, 0.0, -9.67652625643769]) 38.978244261910405
Cond:  LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -4.017023606085511])
Cost:  35.252794823852994
2->-2
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -18.96011803687532]) 4.710938809408039
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -13.942825613935037]) 4.7109410545313795
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, -4.314262338584729]) 5.551658156818072
Cond:  LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -18.96011803687532])
Cost:  4.710938809408039
2->0
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, 0.25051577823979176]) 1.0892253519003972
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.315349265651319]) 5.166563670283428
LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -2.4976184158595878]) 39.33856773505276
Cond:  LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, 0.25051577823979176])
Cost:  1.0892253519003972
Evaluating current SM
SM cost on init states:  1.5249653041032716
Total cost:  1.4103508943339536
Overall time: 231.5962736606598
Traj opt time: 183.98481512069702
Learn modes time: 0.26766014099121094
Learn conds time: 9.357426404953003
SM eval time: 6.669990301132202
Ref traj sampler time: 0.0
Iteration 1
Get reference trajectories
Best prob cost:  (0.05632975672428119, 0.002604247527019543, 0.002156447265180472, 0.001815836258452385, 0.0015754101532150903, 0.001559964675733164, 0.0013926438785979804, 0.0011819705659946718, 0.0009127191234499334, 0.0009091592454930403)
Best SM cost:  (2.7453323448442744, 1.8343022120475527, 1.8362738726634675, 1.838111541693552, 1.846945729936079, 1.83432314791129, 1.826132227433878, 8.82732825832844, 1.8404280158619875, 1.827630031860446)
Best prob:  (1.0, 0.01630784023747764, 0.01353035873098812, 0.011414193807284716, 0.009992765518722142, 0.009768728606147544, 0.008649800342313312, 0.0013539883382376419, 0.005750581204796943, 0.005655310522908502)
Ref modes:  [[[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[3.9138492586688383], [-2.2898683849040045]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]]]
Ref times:  [0.98, 1.3, 0.9400000000000001, 1.3, 1.22, 1.26, 5.5, 0.62]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f64343004a8>, <synth.policy.condition.LinearCond object at 0x7f64342bac18>, <synth.policy.condition.LinearCond object at 0x7f64343004a8>, <synth.policy.condition.LinearCond object at 0x7f64342bac18>, <synth.policy.condition.LinearCond object at 0x7f64343629e8>, <synth.policy.condition.LinearCond object at 0x7f6434362f60>, <synth.policy.condition.LinearCond object at 0x7f64342bac18>, <synth.policy.condition.LinearCond object at 0x7f64343629e8>]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.9309031826219292, 0.0029043464608064173, 0.002802692502885114, 0.0025181724626402533, 0.0023278939245241323, 0.002257809480238444, 0.002094215748688602, 0.0019396924556256225, 0.0017238651087442011, 0.0014444016510815109)
Best SM cost:  (0.0, 1.8417002488740994, 1.8368070406790877, 1.8405501029185374, 1.8321479698443521, 1.8362374255568388, 1.8368304612895447, 1.8405067905490071, 1.8275407030085489, 1.841425211955912)
Best prob:  (1.0, 0.018322112127553213, 0.017594522006840273, 0.01586766717944942, 0.014545940243352812, 0.014165826962588867, 0.013147210413679805, 0.012221983091566394, 0.010722127845555584, 0.009109523142207879)
Ref modes:  [[[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[3.9138492586688383], [-2.2898683849040045]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]]]
Ref times:  [1.3, 1.76, 1.72, 2.38, 0.0, 0.0, 0.0, 0.0]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f6434300390>, <synth.policy.condition.LinearCond object at 0x7f6434300e48>, <synth.policy.condition.LinearCond object at 0x7f6434293cc0>, None, None, None, None, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.9368800686248283, 0.002282179446138025, 0.002229674241614873, 0.0021227723798880388, 0.002077711274741889, 0.0019086695681229642, 0.0015009780653988912, 0.0013830611557542117, 0.001248059450710356, 0.001135198331295958)
Best SM cost:  (0.0, 1.8370124475852538, 1.7816353951513753, 1.870363816359573, 34.46708845383076, 22.721723727958864, 1.7675289882607752, 1.7752710223338308, 1.769862619428085, 1.7691917007647466)
Best prob:  (1.0, 0.01435277540331935, 0.013245937345198057, 0.013822349029356943, 0.0031221998195407603, 0.015418054130339235, 0.008792032621711061, 0.008164294307099454, 0.007327632859220846, 0.006660530111210674)
Ref modes:  [[[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[3.9138492586688383], [-2.2898683849040045]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]]]
Ref times:  [1.08, 1.42, 1.6400000000000001, 2.38, 0.0, 0.0, 0.0, 0.0]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f6434362ba8>, <synth.policy.condition.LinearCond object at 0x7f6434300fd0>, <synth.policy.condition.LinearCond object at 0x7f643430b828>, None, None, None, None, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.069149359412404, 0.002075585877081813, 0.0008426683704085928, 0.0007623154756656187, 0.000691453031550735, 0.0005860600579741933, 0.00055277868448494, 0.0005422073233001318, 0.0004955215703102589, 0.00044164538104758964)
Best SM cost:  (2.538686484653919, 1.7914709903980834, 1.7851455663097782, 1.7841506389452642, 21.29287603097201, 1.7897687333606687, 1.7823757928186317, 1.7833712409027234, 18.694959181369263, 1.7856202982874647)
Best prob:  (1.0, 0.012452413438776174, 0.005023685239198905, 0.004541038997890871, 0.0009069832537002045, 0.003510069109901531, 0.0032870096364587898, 0.0032267143988203534, 0.0006421175969591205, 0.002634180884888674)
Ref modes:  [[[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[3.9138492586688383], [-2.2898683849040045]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]]]
Ref times:  [0.88, 1.16, 0.8200000000000001, 1.12, 1.26, 1.42, 6.04, 0.58]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f6434362828>, <synth.policy.condition.LinearCond object at 0x7f64342db160>, <synth.policy.condition.LinearCond object at 0x7f6434362828>, <synth.policy.condition.LinearCond object at 0x7f64342db160>, <synth.policy.condition.LinearCond object at 0x7f64342dbf28>, <synth.policy.condition.LinearCond object at 0x7f64342db748>, <synth.policy.condition.LinearCond object at 0x7f64342db160>, <synth.policy.condition.LinearCond object at 0x7f64342dbf28>]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.05720964805889186, 0.0022022690362438024, 0.0020305441688473497, 0.0019991274256528613, 0.001673965424113118, 0.0016535273257524041, 0.001644038580675735, 0.0013606159808075746, 0.001010669026126549, 0.000856416745720931)
Best SM cost:  (2.7334327224617203, 1.7838875222618973, 1.7801046865900085, 1.7864436003868482, 1.7795510210656917, 1.7809215740482598, 1.7865715445470571, 1.7794788033799045, 1.774265698389026, 1.7891551870276352)
Best prob:  (1.0, 0.013112627945941709, 0.012044504612898625, 0.011933557608523444, 0.009923903464148695, 0.009816183030348676, 0.009815151944654689, 0.008065666326165769, 0.005960046076812883, 0.005126160908941169)
Ref modes:  [[[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[3.9138492586688383], [-2.2898683849040045]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]]]
Ref times:  [0.9400000000000001, 1.24, 0.9, 1.22, 1.16, 1.26, 5.44, 0.6]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f6434293c50>, <synth.policy.condition.LinearCond object at 0x7f6434300860>, <synth.policy.condition.LinearCond object at 0x7f6434293c50>, <synth.policy.condition.LinearCond object at 0x7f6434300860>, <synth.policy.condition.LinearCond object at 0x7f6434397748>, <synth.policy.condition.LinearCond object at 0x7f6434397be0>, <synth.policy.condition.LinearCond object at 0x7f6434300860>, <synth.policy.condition.LinearCond object at 0x7f6434397748>]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.20240342119502128, 0.0027252450421806048, 0.002478709889255291, 0.0019911918970382182, 0.0014682517023416634, 0.001318721297044167, 0.0009035515973298991, 0.0006227126580408855, 0.0005996951884814807, 0.0005224264932833643)
Best SM cost:  (1.5288924385742266, 1.8367995569805387, 1.8365603736456628, 7.130372608434864, 1.8398431090205367, 1.8393258590435462, 1.8347453903652722, 1.8452528240504216, 1.8347779189984739, 12.513353063382034)
Best prob:  (1.0, 0.017108200411542873, 0.015556811674601745, 0.013384814522683058, 0.009245301567916413, 0.00829944306355222, 0.0056605628348851125, 0.003942372637845379, 0.0037570878410305496, 0.0015894480986192996)
Ref modes:  [[[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[3.9138492586688383], [-2.2898683849040045]]]
Ref times:  [0.7000000000000001, 0.9, 0.64, 0.86, 0.64, 0.88, 1.06, 1.18]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f6434326fd0>, <synth.policy.condition.LinearCond object at 0x7f6434300908>, <synth.policy.condition.LinearCond object at 0x7f6434326fd0>, <synth.policy.condition.LinearCond object at 0x7f6434300908>, <synth.policy.condition.LinearCond object at 0x7f6434326fd0>, <synth.policy.condition.LinearCond object at 0x7f6434300908>, <synth.policy.condition.LinearCond object at 0x7f6434382ef0>, <synth.policy.condition.LinearCond object at 0x7f64343824a8>]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.04882128667872942, 0.002056024575265054, 0.0014250073779575603, 0.0013463621662320286, 0.0011951327739376635, 0.0010434537002084966, 0.0010359679863421892, 0.0007966021232667802, 0.0006642636788232375, 0.0005547813128495715)
Best SM cost:  (2.886388858798682, 1.824967940410767, 1.8257494415634858, 1.8220880005622482, 1.8216808154886048, 2.1965058380447235, 1.8272813851856147, 1.825658854468209, 1.8156923683238768, 39.67390773080142)
Best prob:  (1.0, 0.012755240935149134, 0.00884742479256432, 0.008328590749332607, 0.007390076617238808, 0.009403123439551997, 0.0064418619907910665, 0.004945405242377018, 0.004083752379685741, 0.00991536203141043)
Ref modes:  [[[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[3.9138492586688383], [-2.2898683849040045]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]]]
Ref times:  [1.16, 1.58, 1.1400000000000001, 1.58, 1.12, 1.1400000000000001, 5.0, 0.6]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f643430b978>, <synth.policy.condition.LinearCond object at 0x7f6434362438>, <synth.policy.condition.LinearCond object at 0x7f643430b978>, <synth.policy.condition.LinearCond object at 0x7f6434362438>, <synth.policy.condition.LinearCond object at 0x7f64342d1b38>, <synth.policy.condition.LinearCond object at 0x7f643439eb00>, <synth.policy.condition.LinearCond object at 0x7f6434362438>, <synth.policy.condition.LinearCond object at 0x7f64342d1b38>]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.9212677426699154, 0.002478385480811133, 0.002052111689838225, 0.0019438366600421713, 0.0017138564965390852, 0.001692882711337892, 0.0015932385055169333, 0.0015807714492809372, 0.0014758616085016382, 0.0011199000782038716)
Best SM cost:  (0.007004576320858366, 1.8051274895715277, 1.8035861340614978, 27.053837256215054, 1.8114058601923697, 1.7999054843973727, 40.52579436239846, 1.8106068825453492, 1.80393570015765, 1.8065487400084714)
Best prob:  (1.0, 0.015073448550745296, 0.012461644532906177, 0.002702867264976921, 0.01048926079730304, 0.01024242396113146, 0.002585516572285328, 0.009667017845111562, 0.008965444259974647, 0.00682087801960287)
Ref modes:  [[[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[3.9138492586688383], [-2.2898683849040045]], [[0.0], [0.0]], [[0.0], [0.0]]]
Ref times:  [0.8200000000000001, 1.1, 0.76, 1.02, 1.36, 2.44, 0.0, 0.0]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f6434300a58>, <synth.policy.condition.LinearCond object at 0x7f6434300208>, <synth.policy.condition.LinearCond object at 0x7f6434300a58>, <synth.policy.condition.LinearCond object at 0x7f6434300208>, <synth.policy.condition.LinearCond object at 0x7f6434300160>, None, None, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.9288912349251445, 0.002472871836000421, 0.0021583709008502665, 0.0020554320802113665, 0.0020495825642837004, 0.0020469707405823077, 0.0017563221044687573, 0.0017383913666043972, 0.0016794364613894296, 0.0013416772664378677)
Best SM cost:  (0.0049636246056818795, 1.8975501929247722, 1.8105862448167482, 1.808189413804096, 1.8024919725138369, 1.8106869378336419, 2.2538149146446385, 1.8089300970539592, 1.8172036884352114, 1.809819446951184)
Best prob:  (1.0, 0.016519315866698445, 0.013198985484213634, 0.012539397623676713, 0.012432675375870793, 0.012519005762855945, 0.0168076951104248, 0.010613112667502518, 0.010338367617079588, 0.008198407840074261)
Ref modes:  [[[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[3.9138492586688383], [-2.2898683849040045]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]]]
Ref times:  [1.22, 1.6400000000000001, 1.72, 2.3000000000000003, 0.0, 0.0, 0.0, 0.0]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f64342ec080>, <synth.policy.condition.LinearCond object at 0x7f64342ec160>, <synth.policy.condition.LinearCond object at 0x7f643432e208>, None, None, None, None, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.05323964301005989, 0.002979699641953325, 0.00250494363227253, 0.0019543948065083665, 0.0018529480200869361, 0.0017268479039150215, 0.0015943080415577317, 0.0012718829404195556, 0.0010801953170133667, 0.0009672855411084257)
Best SM cost:  (2.804951990773353, 1.8246544599780585, 1.9021453717261303, 1.8221907604631373, 2.424841790324967, 1.828993662340186, 2.2781417538435544, 1.8300734449267566, 1.8186087633872778, 11.82500963377805)
Best prob:  (1.0, 0.018479776354752626, 0.016813995480563247, 0.012091120546612018, 0.01737258437301596, 0.010756297404133072, 0.01562045957516902, 0.007930942472990594, 0.006658875571955173, 0.0011671776326065949)
Ref modes:  [[[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]], [[3.9138492586688383], [-2.2898683849040045]], [[-1.2623488993002503], [-1.321441589855514]], [[1.8933849608321238], [3.813781916402031]]]
Ref times:  [0.98, 1.3, 0.9400000000000001, 1.28, 1.16, 1.22, 5.3, 0.62]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f6434300630>, <synth.policy.condition.LinearCond object at 0x7f6434293e10>, <synth.policy.condition.LinearCond object at 0x7f6434300630>, <synth.policy.condition.LinearCond object at 0x7f6434293e10>, <synth.policy.condition.LinearCond object at 0x7f64342ec198>, <synth.policy.condition.LinearCond object at 0x7f64342ec748>, <synth.policy.condition.LinearCond object at 0x7f6434293e10>, <synth.policy.condition.LinearCond object at 0x7f64342ec198>]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Init states
[ 1.0238519   5.21        1.56714754 12.58179927]
[ 1.02452422  5.21        1.54316104 13.16798934]
[ 0.9657293   5.21        1.59810004 12.75179826]
[ 0.98026193  5.21        1.58020259 12.37099615]
[ 0.97858052  5.21        1.59528691 12.48741882]
[ 1.03131443  5.21        1.59938648 12.0646275 ]
[ 1.01025575  5.21        1.53289216 12.91368628]
[ 0.99734558  5.21        1.55564388 12.26793856]
[ 0.99715465  5.21        1.54593759 13.0260086 ]
[ 1.01547098  5.21        1.5881227  12.55517185]
Optimizing trajectories for safe goal
Random inits:  [False, False, False, False, False, False, False, False, False, False]
Mode weights:  [0.01, 1.0, 1.0, 0.01, 0.01, 0.01, 0.01, 1.0, 1.0, 0.01]
Cond weights:  [0.01, 1.0, 1.0, 0.01, 0.01, 0.01, 0.01, 1.0, 1.0, 0.01]
Init cost:  0.189106999489681
Init cost:  0.14758192610054094
Init cost:  2.6132248961718814
Init cost:  0.17491771863165095
Init cost:  2.8442453695724432
Init cost:  2.6082471082890373
Init cost:  2.70504798940211
Init cost:  1.5982188159005226
Init cost:  0.16362584399948255
Init cost:  2.3126441320126276
0.14758192610054094 2
0.189106999489681 1
Init cost:  0.189106999489681
Init cost:  0.14758192610054094
Final:  0.189106999489681 1
Final:  0.14758192610054094 2
0.157056880486233 7
Init cost:  1.1039393659350103
0.1702639889916328 8
Init cost:  0.1702639889916328
Final:  0.17026338553291295 8
0.10379199300067407 4
Init cost:  0.07727279250858934
0.10189004288237546 0
Init cost:  0.06445243892435229
0.060102707461026646 5
Init cost:  0.054058404339883785
Final:  0.06430065137074768 0
0.07447754434822826 3
Init cost:  0.07387821197282149
Final:  0.07387820235891823 3
Final:  0.255105936013941 7
Final:  0.06379510126280191 4
Final:  0.05302629639315051 5
0.10245090523223481 6
Init cost:  0.06363739880858546
0.05689352757243677 9
Init cost:  0.5110981422585643
Final:  0.06260787086730064 6
Final:  0.047150545095280244 9
Weights:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9995106827542861, 1.0, 1.0, 1.0]
Traj x:  [ 1.89443926e+00  3.97658200e+00 -1.31886122e+00 -1.38935046e+00
  1.90859765e+00  3.92571394e+00 -1.36298702e+00 -1.49174467e+00
  1.53734171e+00  3.67581835e+00  4.58239190e+00 -3.42069534e+00
 -1.44809772e+00  3.40702603e-01  6.02210870e-01  3.16364608e+00
  2.35298837e+00  2.90278048e+00  2.26846932e+00 -1.54691528e-18
  2.51549305e+00  3.77949429e+00 -1.58985672e-18  8.58861593e-20]
Traj x:  [ 1.89338496  3.81378192 -1.2623489  -1.32144159  1.89338496  3.81378192
  3.91384926 -2.28986838  0.          0.          0.          0.
  0.          0.          0.          0.          3.25        4.4
  4.3         5.95        0.          0.          0.          0.        ]
Traj x:  [ 1.89338496  3.81378192 -1.2623489  -1.32144159  1.89338496  3.81378192
  3.91384926 -2.28986838  0.          0.          0.          0.
  0.          0.          0.          0.          2.7         3.55
  4.1         5.95        0.          0.          0.          0.        ]
Traj x:  [ 1.95017164e+00  3.97038949e+00 -1.39051987e+00 -1.34887590e+00
  1.90394281e+00  3.88032825e+00 -1.26670407e+00 -1.42415091e+00
  1.76480097e+00  3.74135089e+00  4.39305227e+00 -3.16720105e+00
  1.16125388e+00  1.03223166e+00  7.84547313e-01  3.23807779e+00
  2.06532168e+00  2.53826632e+00  1.81915345e+00  2.31059873e+00
  2.66454473e+00  4.55517030e+00  8.67361738e-23  0.00000000e+00]
Traj x:  [ 1.85418614e+00  3.81995214e+00 -1.09109100e+00 -1.32539389e+00
  1.77156722e+00  3.82165429e+00 -1.22305939e+00 -1.32682212e+00
  2.25929530e+00  3.73902620e+00  4.43552726e+00 -3.76927663e+00
 -1.32563146e+00  6.65316864e-01  8.94995308e-01  3.29913444e+00
  2.13407478e+00  2.84386328e+00  1.97033818e+00 -3.23799868e-18
  2.89211274e+00  3.86415172e+00  1.97829271e-19 -4.17439909e-18]
Traj x:  [ 2.39966520e+00  3.96773548e+00 -1.76246323e+00 -1.43787873e+00
  2.32444858e+00  3.93052489e+00 -1.69131526e+00 -1.44851533e+00
  2.34859163e+00  3.95313734e+00 -1.69335242e+00 -1.42171376e+00
  1.77984894e+00  3.64054546e+00  4.52351992e+00 -4.14987890e+00
  1.47478635e+00  1.60068458e+00  1.22937234e+00  1.58845097e+00
  1.29275278e+00  1.02024377e-19  1.83216822e+00  3.40240172e+00]
Traj x:  [ 1.49645367e+00  4.07332806e+00 -9.73691490e-01 -1.55475415e+00
  1.48479883e+00  4.07965929e+00 -9.28107978e-01 -1.60538843e+00
  2.33786051e+00  3.97742938e+00  4.35546126e+00 -4.24997350e+00
 -1.28108134e+00  1.88780001e-01  1.07148003e+00  3.39445605e+00
  2.44943370e+00  3.44421067e+00  2.49904490e+00  2.14329298e-19
  2.36685699e+00  2.72939034e+00 -2.07446874e-19 -7.46798456e-20]
Traj x:  [ 1.89177211e+00  3.81343597e+00 -1.26179246e+00 -1.32107545e+00
  1.89217413e+00  3.81349165e+00 -1.26245909e+00 -1.32101732e+00
  1.89104655e+00  3.81380148e+00  3.91464682e+00 -2.29119763e+00
  1.20038761e-04 -3.35809931e-05 -2.21363449e-04  3.62562178e-04
  2.04746171e+00  2.74859753e+00  1.89742055e+00  2.54857850e+00
  3.39728623e+00  6.10090866e+00  1.74234406e-18 -2.95812178e-19]
Traj x:  [ 1.89119306e+00  3.81367612e+00 -1.26235136e+00 -1.32133574e+00
  1.89228224e+00  3.81355772e+00  3.91447282e+00 -2.29101120e+00
 -1.42959344e-04  8.27684023e-05 -1.79428281e-04  6.10436350e-05
 -7.30995884e-05 -5.49091845e-05 -1.89034263e-04  9.86353744e-05
  3.04864952e+00  4.10013623e+00  4.29836362e+00  5.75210686e+00
 -8.67361738e-23 -1.73472348e-22  0.00000000e+00  1.73472348e-22]
Traj x:  [ 1.99995333e+00  4.06813112e+00 -1.47054697e+00 -1.52172722e+00
  2.17973329e+00  4.02835618e+00 -1.20346936e+00 -1.44781442e+00
  3.17640876e+00  3.97872647e+00  4.83025408e+00 -3.68890644e+00
 -7.56593311e-02  1.01290508e-01  1.15032194e+00  3.42348362e+00
  1.43095333e+00  1.70424227e+00  1.22633085e+00  5.18782919e-05
  2.27329420e+00  2.92066504e+00 -9.33241669e-19  7.56746659e-19]
Learn mode mapping
Assigning modes
Merging modes
Avg modes:  [ 1.97535829  3.8568309  -1.33339646 -1.38924585  3.81639036 -3.00875342]
Assigning modes
Merging modes
Avg modes:  [ 1.97872912  3.87754415 -1.32898823 -1.38898654  4.27665363 -3.16040376]
Assigning modes
Merging modes
Avg modes:  [ 1.97872912  3.87754415 -1.32897444 -1.38899055  4.27769868 -3.16073445]
Traj 0
[ 1.89443926  3.976582   -1.31886122 -1.38935046  1.90859765  3.92571394
  1.53734171  3.67581835  4.5823919  -3.42069534]
[0.0002353  0.00029028 0.00022685 0.00025155 0.00037795]
(4,2,1.000000)->(3,0,1.000000)->(2,0,1.000000)->(1,1,1.000000)->(0,0,1.000000)->
Traj 1
[ 1.89338496  3.81378192 -1.2623489  -1.32144159  1.89338496  3.81378192
  3.91384926 -2.28986838]
[0.000325 0.00044  0.00043  0.000595]
(3,2,1.000000)->(2,0,1.000000)->(1,1,1.000000)->(0,0,1.000000)->
Traj 2
[ 1.89338496  3.81378192 -1.2623489  -1.32144159  1.89338496  3.81378192
  3.91384926 -2.28986838]
[0.00027  0.000355 0.00041  0.000595]
(3,2,1.000000)->(2,0,1.000000)->(1,1,1.000000)->(0,0,1.000000)->
Traj 3
[ 1.95017164  3.97038949 -1.39051987 -1.3488759   1.90394281  3.88032825
 -1.26670407 -1.42415091  1.76480097  3.74135089  4.39305227 -3.16720105]
[0.00020653 0.00025383 0.00018192 0.00023106 0.00026645 0.00045552]
(5,2,1.000000)->(4,0,1.000000)->(3,1,1.000000)->(2,0,1.000000)->(1,1,1.000000)->(0,0,1.000000)->
Traj 4
[ 1.85418614  3.81995214 -1.091091   -1.32539389  1.77156722  3.82165429
  2.2592953   3.7390262   4.43552726 -3.76927663]
[0.00021341 0.00028439 0.00019703 0.00028921 0.00038642]
(4,2,1.000000)->(3,0,1.000000)->(2,0,1.000000)->(1,1,1.000000)->(0,0,1.000000)->
Traj 5
[ 2.3996652   3.96773548 -1.76246323 -1.43787873  2.32444858  3.93052489
 -1.69131526 -1.44851533  2.34859163  3.95313734  1.77984894  3.64054546
  4.52351992 -4.1498789 ]
[0.00014748 0.00016007 0.00012294 0.00015885 0.00012928 0.00018322
 0.00034024]
(6,2,1.000000)->(5,0,1.000000)->(4,0,1.000000)->(3,1,1.000000)->(2,0,1.000000)->(1,1,1.000000)->(0,0,1.000000)->
Traj 6
[ 1.49645367  4.07332806 -0.97369149 -1.55475415  1.48479883  4.07965929
  2.33786051  3.97742938  4.35546126 -4.2499735 ]
[0.00024494 0.00034442 0.0002499  0.00023669 0.00027294]
(4,2,1.000000)->(3,0,1.000000)->(2,0,1.000000)->(1,1,1.000000)->(0,0,1.000000)->
Traj 7
[ 1.89177211  3.81343597 -1.26179246 -1.32107545  1.89217413  3.81349165
 -1.26245909 -1.32101732  1.89104655  3.81380148  3.91464682 -2.29119763]
[0.00020475 0.00027486 0.00018974 0.00025486 0.00033973 0.00061009]
(5,2,1.000000)->(4,0,1.000000)->(3,1,1.000000)->(2,0,1.000000)->(1,1,1.000000)->(0,0,1.000000)->
Traj 8
[ 1.89119306  3.81367612 -1.26235136 -1.32133574  1.89228224  3.81355772
  3.91447282 -2.2910112 ]
[0.00030486 0.00041001 0.00042984 0.00057521]
(3,2,1.000000)->(2,0,1.000000)->(1,1,1.000000)->(0,0,1.000000)->
Traj 9
[ 1.99995333  4.06813112 -1.47054697 -1.52172722  2.17973329  4.02835618
  3.17640876  3.97872647  4.83025408 -3.68890644]
[0.0001431  0.00017042 0.00012263 0.00022733 0.00029207]
(4,2,1.000000)->(3,0,1.000000)->(2,0,1.000000)->(1,1,1.000000)->(0,0,1.000000)->
Mode mapping:  {0: {4: array([4.14633952e-65, 1.13104527e-42, 1.00000000e+00]), 3: array([1.00000000e+00, 1.41455208e-37, 1.86502250e-26]), 2: array([1.00000000e+00, 4.22855744e-43, 6.37395868e-26]), 1: array([2.56129940e-42, 1.00000000e+00, 3.20076275e-36]), 0: array([1.00000000e+00, 1.40008038e-43, 2.99436429e-26])}, 1: {3: array([5.49268713e-45, 1.10970116e-30, 1.00000000e+00]), 2: array([1.00000000e+00, 1.03640118e-41, 2.03287764e-25]), 1: array([3.89924996e-41, 1.00000000e+00, 1.28265951e-35]), 0: array([1.00000000e+00, 1.03640118e-41, 2.03287764e-25])}, 2: {3: array([5.49268713e-45, 1.10970116e-30, 1.00000000e+00]), 2: array([1.00000000e+00, 1.03640118e-41, 2.03287764e-25]), 1: array([3.89924996e-41, 1.00000000e+00, 1.28265951e-35]), 0: array([1.00000000e+00, 1.03640118e-41, 2.03287764e-25])}, 3: {5: array([3.05620973e-60, 2.40968153e-39, 1.00000000e+00]), 4: array([1.00000000e+00, 5.85366422e-40, 1.12500584e-25]), 3: array([2.42718460e-42, 1.00000000e+00, 1.53561864e-35]), 2: array([1.00000000e+00, 1.50890733e-42, 1.03283246e-25]), 1: array([2.27319059e-42, 1.00000000e+00, 3.81510895e-37]), 0: array([1.00000000e+00, 6.55642188e-44, 6.10303081e-26])}, 4: {4: array([6.39001536e-70, 1.91694218e-42, 1.00000000e+00]), 3: array([1.00000000e+00, 1.74682700e-43, 3.39697809e-23]), 2: array([1.00000000e+00, 6.31638601e-41, 4.55933573e-26]), 1: array([5.96845590e-40, 1.00000000e+00, 1.57585121e-33]), 0: array([1.00000000e+00, 1.68466889e-41, 1.20252454e-25])}, 5: {6: array([1.29602706e-76, 2.04323898e-45, 1.00000000e+00]), 5: array([1.00000000e+00, 6.48884726e-39, 4.72219126e-25]), 4: array([1.00000000e+00, 1.41992879e-46, 7.25550375e-24]), 3: array([1.13932799e-45, 1.00000000e+00, 1.12473327e-40]), 2: array([1.00000000e+00, 3.83950920e-46, 7.16055547e-24]), 1: array([4.64795114e-46, 1.00000000e+00, 1.48026417e-41]), 0: array([1.00000000e+00, 4.15411534e-47, 1.10110469e-23])}, 6: {4: array([1.87041266e-77, 6.62884743e-44, 1.00000000e+00]), 3: array([1.00000000e+00, 8.94411329e-47, 4.83800186e-24]), 2: array([1.00000000e+00, 8.12153985e-42, 8.35510978e-29]), 1: array([9.91071171e-42, 1.00000000e+00, 8.74357696e-32]), 0: array([1.00000000e+00, 7.91281423e-42, 1.02567960e-28])}, 7: {5: array([5.21377833e-45, 1.07658056e-30, 1.00000000e+00]), 4: array([1.00000000e+00, 1.07671331e-41, 1.97851782e-25]), 3: array([3.93587773e-41, 1.00000000e+00, 1.27720196e-35]), 2: array([1.00000000e+00, 1.06547787e-41, 2.01185101e-25]), 1: array([3.97342477e-41, 1.00000000e+00, 1.30149968e-35]), 0: array([1.00000000e+00, 1.07415919e-41, 2.00393044e-25])}, 8: {3: array([5.25577797e-45, 1.08305082e-30, 1.00000000e+00]), 2: array([1.00000000e+00, 1.06172562e-41, 2.01274060e-25]), 1: array([3.90997458e-41, 1.00000000e+00, 1.28219506e-35]), 0: array([1.00000000e+00, 1.07765915e-41, 1.98486198e-25])}, 9: {4: array([1.34843385e-70, 7.12264881e-47, 1.00000000e+00]), 3: array([1.00000000e+00, 8.19846825e-53, 7.28460868e-20]), 2: array([1.00000000e+00, 3.19815263e-46, 4.38192215e-25]), 1: array([6.38384552e-45, 1.00000000e+00, 6.97718480e-38]), 0: array([1.00000000e+00, 2.19441417e-45, 3.53854102e-26])}}
Learning switch conds
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
0->-2
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -18.960118039455818]) 2.2227296445333657e-43
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.3572263572588295]) 3.2159644406279016e-43
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -14.946093067204217]) 3.460992463162269e-43
Cond:  LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -18.960118039455818])
Cost:  2.2227296445333657e-43
0->1
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 0.4884756974155359]) 236.9711513820569
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -1.6143577952168817]) 350.3810181568885
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -6.831221240558956]) 353.7861811202386
Cond:  LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 0.4884756974155359])
Cost:  236.9711513820569
0->2
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -1.0104894064782524]) 33.05174456261989
LinearCond([0.0, 0.0, 1.0, 0.0, 0.0, -10.251690548577724]) 41.791287952861595
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -2.9838289810350407]) 109.43150349001061
Cond:  LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -1.0104894064782524])
Cost:  33.05174456261989
-1->2
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 4.4923618385488595]) 9.863345747970826e-24
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -0.5688945849312175]) 2.0471444836754612e-23
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -2.38487627378516]) 2.773470096226636e-23
Cond:  LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 4.4923618385488595])
Cost:  9.863345747970826e-24
-1->0
LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, 0.11284535102851856]) 0.0
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, 8.906709759494744]) 0.0
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.109999986627561]) 0.0
Cond:  LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, 0.11284535102851856])
Cost:  0.0
-1->1
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.109948742711794]) 1.3445374290187504e-41
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.310094894114872]) 1.34483071058834e-41
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 1.66481810851551]) 6.30265232537005e-41
Cond:  LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.109948742711794])
Cost:  1.3445374290187504e-41
1->2
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.945261240167094]) 6.650613917581423e-22
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, -1.394312673776433]) 6.95282037570421e-22
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -2.5835102489902972]) 6.990470209480707e-22
Cond:  LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.945261240167094])
Cost:  6.650613917581423e-22
1->-2
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 8.005767981464764]) 9.178057695593276e-30
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -10.958818334563475]) 2.2306387013763297e-29
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -14.949771576260765]) 4.880193295784955e-29
Cond:  LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 8.005767981464764])
Cost:  9.178057695593276e-30
1->0
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, 0.2415595864189953]) 18.46345403659597
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.388587685865143]) 20.58713108445594
LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -1.8989692859247334]) 114.94606771840257
Cond:  LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, 0.2415595864189953])
Cost:  18.46345403659597
2->0
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -5.016040843488911]) 3.5023273144684893e-22
LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -2.4976184158595878]) 3.5140721839702866e-22
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, 0.25051577823979176]) 7.812928873924026e-22
Cond:  LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -5.016040843488911])
Cost:  3.5023273144684893e-22
2->1
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, -0.7279537443679729]) 8.035193525050265e-22
LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -2.654901508865038]) 8.23771149489852e-22
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 6.236252489007407]) 8.315622216509787e-22
Cond:  LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, -0.7279537443679729])
Cost:  8.035193525050265e-22
2->-2
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 8.035475762003832]) 33.93577741891913
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -15.330662281335831]) 86.80608704510026
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -10.431941419654066]) 88.7594656987814
Cond:  LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 8.035475762003832])
Cost:  33.93577741891913
Evaluating current SM
SM cost on init states:  0.0037553521963531386
Total cost:  0.001429471905757107
Min SM cost:  0.001429471905757107

