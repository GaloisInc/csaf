python -m synth.main.synth car_0_0_1
Error: IPOPT shared library failed to import
np seed:  3368405720
random seed:  1312492313796003826
Iteration 0
Init states
[ 1.01181369  5.21        1.55382387 13.32701825]
[ 0.99948982  5.21        1.5529455  12.1254253 ]
[ 1.00313304  5.21        1.55486695 12.37420003]
[ 1.01763162  5.21        1.54807562 12.92996742]
[ 1.01479577  5.21        1.55421871 12.85013572]
[ 0.99269066  5.21        1.56161999 12.01976826]
[ 1.03599713  5.21        1.59689236 12.88817777]
[ 1.00942396  5.21        1.56279626 13.10528111]
[ 0.96628061  5.21        1.53465185 13.35102498]
[ 1.00628332  5.21        1.58841524 12.35221356]
Initial sampling of trajectories
Optimizing trajectories for safe goal
Random inits:  [False, False, False, False, False, False, False, False, False, False]
Mode weights:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Cond weights:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Init cost:  71.20460518525299
Init cost:  30.741751391638427
Init cost:  119.72011455672433
Init cost:  248.02941045887894
Init cost:  95.62775194897667
Init cost:  89.08232823387564
Init cost:  115.04113340457343
Init cost:  68.48484621516126
Init cost:  59.24186602475822
Init cost:  2.043692020339038
1.7734448233327083 4
Init cost:  4.389679212671924
0.14417135169252285 0
Init cost:  0.46731872728099566
11.355646776135186 5
Init cost:  11.297855440234882
1.7145205563078592 6
Init cost:  5.878416484632041
0.14801736390894946 2
Init cost:  0.09566755145566715
1.6692212788795193 1
Init cost:  1.8163288153983694
Final:  6.875581958722248 5
1.7340278965452214 3
Init cost:  2.233640889568966
Final:  0.0937556877920183 0
Final:  0.8868619421938385 4
0.1118142035823566 9
Init cost:  0.11282960408170079
Final:  0.09175448506462186 2
Final:  1.7642879517332537 6
Final:  0.11149705755882551 9
Final:  1.6572448668303732 1
Final:  1.6800521058072306 3
0.11040308832737329 7
Init cost:  0.0998014804781075
Final:  0.09980146927810765 7
1.0794279939647564 8
Init cost:  1.5867389762332211
Final:  0.9963100375703438 8
Weights:  [0.9963786492053888, 1.3550453735609123e-07, 1.0, 7.892374647711609e-08, 0.0004346714026474598, 3.227489981255399e-30, 1.4665465282588923e-07, 1.0, 9.868521334250032e-05, 1.0]
Traj x:  [ 4.28460190e+00  1.86846982e+00  1.91659660e-01 -4.73916796e+00
 -4.68504457e-01 -4.60399766e+00 -2.54010997e-01 -4.36680708e+00
  4.79734996e+00  1.51204132e+00 -1.14883702e-02  3.28450097e+00
  2.77161103e+00 -4.96727709e+00 -1.09157841e+00  3.34399825e+00
  1.15020020e+00  1.81661025e+00  7.21224961e+00  5.02806713e+00
  4.44287912e+00 -7.73651173e-19  3.69821755e+00  5.18613239e-17]
Traj x:  [ 3.13725767e-01  3.28397410e+00  2.11464842e-01  3.27292935e+00
 -5.80017793e-02 -4.73201852e+00  1.15863454e-01 -4.73923865e+00
  3.60920770e-01  3.27768797e+00  3.67204142e-01 -4.71358268e+00
  2.27458268e-01  3.26867693e+00  3.32805915e-01 -4.72255903e+00
  8.63681416e+00  3.77293132e+00  7.33504850e-07  6.51497870e+00
  1.46783965e-02  6.24011356e-03  4.61458138e-03  4.44091948e-03]
Traj x:  [ 9.97766892e-01  3.48059160e+00 -7.11471749e-01 -4.92195841e+00
 -1.01662501e-03 -4.00506810e+00  4.39643327e-01  4.25197995e+00
 -2.98642929e-01 -4.57630877e+00 -4.06020656e-01  3.10035502e+00
  1.61592002e+00  3.22412616e+00  3.32902458e+00 -3.06641835e+00
  4.42496793e+00  5.47129777e+00 -1.39187356e-18  5.79940708e+00
 -2.10122591e-18 -2.23365946e-19  2.02478932e+00  5.21815917e+00]
Traj x:  [ 2.03398479e-01 -4.66350023e+00 -5.03359007e-01 -4.35192558e+00
  2.45082220e-01  3.77310898e+00  5.52921611e-01  3.14985619e+00
 -8.41456715e-02 -4.59121015e+00 -2.05589511e-01 -4.52880103e+00
  4.36802822e-02  3.40880348e+00  1.72020491e+00  2.63422497e+00
  1.83001868e+00  4.71854718e-01  8.31246905e+00  1.24267347e-01
 -8.51106401e-19  1.46833325e-18 -2.65471976e-18  4.04824524e-01]
Traj x:  [ 1.34742009e-02  5.00000000e+00  2.29416943e+00  4.99999240e+00
 -6.47685313e-01  3.28855103e+00  1.35735292e+00 -4.56618545e+00
  1.38017481e+00 -4.56597221e+00  1.43258253e+00 -4.55506184e+00
 -1.00865100e+00  1.14408281e+00  4.18485898e-02 -4.70167143e+00
  7.82030614e+00  5.58032579e+00  4.10268849e-16  2.57146274e+00
  2.60550462e+00  2.71451864e+00  6.90036241e+00  1.24937731e-16]
Traj x:  [-1.94296546e-04  5.00000000e+00  3.70632212e-01  4.95797079e+00
  3.22827703e+00  5.00000000e+00 -4.39957505e+00  3.86459903e+00
  4.65499073e-01 -4.68499469e+00  1.54244007e-02  5.00000000e+00
  1.53092547e-01 -4.74944754e+00  2.25479597e+00 -4.57284951e+00
 -7.34005619e-17  8.65755169e+00  4.07979051e+00  2.00270913e-01
  4.70615299e-03 -3.97037216e-17  1.74388552e-14  8.30696916e+00]
Traj x:  [ 0.22200405  3.28219977  0.16869903  3.27379481  0.11351125  3.27359923
  0.09620797  3.27361757  0.22487253 -4.70472144  0.05930713  3.2739803
 -0.08110127 -4.72162942 -0.0794133  -4.72161659  7.08725288  9.36862076
  4.91245496  3.5244805   9.56948091  0.67967049  0.02942984  0.07911588]
Traj x:  [ 2.38125935  3.25359466  1.06203152 -4.32016545 -0.83049306 -4.24192014
  0.1808988   3.66943555  1.51028103  3.99074736  2.20456512  3.01607346
  2.30435992 -3.73301502  0.07517397  3.65180573  1.0112607   2.3429813
  5.60689973  5.18800633  3.5683004   1.35513924  5.87777961  0.        ]
Traj x:  [ 1.83321919e+00  4.99174720e+00 -2.97804565e-01  3.06527425e+00
  8.40985978e-02 -5.16098076e-02 -1.69248805e+00 -4.99808120e+00
  2.43070645e+00 -3.92784269e+00 -3.82944793e+00 -4.99427858e+00
  1.35011973e+00 -3.11261181e+00 -6.49265922e-02 -4.72131614e+00
  4.12914149e+00  8.94461421e-01  3.96079829e-03  1.31775059e+00
  6.26117745e-01  1.51755486e+00  9.99913657e+00 -2.46420390e-17]
Traj x:  [ 5.97301714e-01  4.98182489e+00 -3.08608178e-01  3.29486234e+00
 -4.48663096e-01 -4.99427523e+00 -2.49000525e-01 -4.99970088e+00
  3.35036721e+00  1.79346196e+00  4.98955158e+00 -1.83638306e+00
  1.95655228e+00 -4.52438895e+00 -1.77549773e+00  3.64092458e+00
  8.10425567e+00  2.03636823e-18  4.84860275e+00  5.88008765e+00
  2.06488616e+00  1.48823621e+00  1.12691200e+00  4.36128395e+00]
Learn mode mapping
Assigning modes
Merging modes
Avg modes:  [ 1.70710282  3.22388618  1.93835262 -3.93615584 -0.41188741 -4.63274926]
Assigning modes
Merging modes
Avg modes:  [ 1.71349398  3.22459856  2.4147621  -3.83912586 -0.40473845 -4.69738023]
Assigning modes
Merging modes
Avg modes:  [ 1.71351477  3.22458975  2.64941741 -3.76623822 -0.39241516 -4.69501518]
Traj 0
[ 4.2846019   1.86846982  0.19165966 -4.73916796 -0.46850446 -4.60399766
 -0.254011   -4.36680708  4.79734996  1.51204132  2.77161103 -4.96727709]
[1.1502002  1.81661025 7.21224961 5.02806713 4.44287912 3.69821755]
(5,1,1.000000)->(4,0,0.999995)->(3,2,0.966885)->(2,2,0.983417)->(1,2,0.929037)->(0,0,1.000000)->
Traj 1
[ 0.31372577  3.2839741   0.21146484  3.27292935  0.11586345 -4.73923865]
[8.63681416 3.77293132 6.5149787 ]
(2,2,0.945855)->(1,0,1.000000)->(0,0,1.000000)->
Traj 2
[ 0.99776689  3.4805916  -0.71147175 -4.92195841  0.43964333  4.25197995
  1.61592002  3.22412616  3.32902458 -3.06641835]
[4.42496793 5.47129777 5.79940708 2.02478932 5.21815917]
(4,1,1.000000)->(3,0,1.000000)->(2,0,1.000000)->(1,2,0.987332)->(0,0,1.000000)->
Traj 3
[ 0.20339848 -4.66350023 -0.50335901 -4.35192558  0.24508222  3.77310898
  0.55292161  3.14985619  1.72020491  2.63422497]
[1.83001868 0.47185472 8.31246905 0.12426735 0.40482452]
(4,0,1.000000)->(3,0,1.000000)->(2,0,1.000000)->(1,2,0.975541)->(0,2,0.921668)->
Traj 4
[ 0.0134742   5.          2.29416943  4.9999924   1.35735292 -4.56618545
  1.38017481 -4.56597221  1.43258253 -4.55506184 -1.008651    1.14408281]
[7.82030614 5.58032579 2.57146274 2.60550462 2.71451864 6.90036241]
(5,0,0.999989)->(4,1,0.997658)->(3,1,0.996094)->(2,1,0.995170)->(1,0,1.000000)->(0,0,1.000000)->
Traj 5
[ 0.37063221  4.95797079  3.22827703  5.         -4.39957505  3.86459903
  2.25479597 -4.57284951]
[8.65755169 4.07979051 0.20027091 8.30696916]
(3,1,1.000000)->(2,0,1.000000)->(1,0,1.000000)->(0,0,1.000000)->
Traj 6
[ 0.22200405  3.28219977  0.16869903  3.27379481  0.11351125  3.27359923
  0.09620797  3.27361757  0.22487253 -4.70472144  0.05930713  3.2739803 ]
[7.08725288 9.36862076 4.91245496 3.5244805  9.56948091 0.67967049]
(5,0,1.000000)->(4,2,0.917818)->(3,0,1.000000)->(2,0,1.000000)->(1,0,1.000000)->(0,0,1.000000)->
Traj 7
[ 2.38125935  3.25359466  1.06203152 -4.32016545 -0.83049306 -4.24192014
  0.1808988   3.66943555  1.51028103  3.99074736  2.20456512  3.01607346
  2.30435992 -3.73301502]
[1.0112607  2.3429813  5.60689973 5.18800633 3.5683004  1.35513924
 5.87777961]
(6,1,1.000000)->(5,0,1.000000)->(4,0,1.000000)->(3,0,1.000000)->(2,2,0.968961)->(1,1,0.962205)->(0,0,1.000000)->
Traj 8
[ 1.83321919  4.9917472  -0.29780457  3.06527425 -1.69248805 -4.9980812
  2.43070645 -3.92784269 -3.82944793 -4.99427858  1.35011973 -3.11261181]
[4.12914149 0.89446142 1.31775059 0.62611774 1.51755486 9.99913657]
(5,1,0.999990)->(4,1,1.000000)->(3,1,1.000000)->(2,2,0.882273)->(1,0,1.000000)->(0,0,1.000000)->
Traj 9
[ 0.59730171  4.98182489 -0.4486631  -4.99427523 -0.24900053 -4.99970088
  3.35036721  1.79346196  4.98955158 -1.83638306  1.95655228 -4.52438895
 -1.77549773  3.64092458]
[8.10425567 4.84860275 5.88008765 2.06488616 1.48823621 1.126912
 4.36128395]
(6,0,1.000000)->(5,1,0.999992)->(4,1,0.999977)->(3,0,0.999999)->(2,2,0.980364)->(1,2,0.985452)->(0,0,1.000000)->
Mode mapping:  {0: {5: array([7.02254572e-15, 1.00000000e+00, 1.25314039e-10]), 4: array([9.99994817e-01, 5.18276499e-06, 5.23873292e-70]), 3: array([5.07951430e-14, 3.31150979e-02, 9.66884902e-01]), 2: array([5.36077933e-15, 1.65834145e-02, 9.83416585e-01]), 1: array([6.11661435e-15, 7.09626652e-02, 9.29037335e-01]), 0: array([9.99999517e-01, 4.83016168e-07, 6.96644164e-70])}, 1: {2: array([4.84920364e-15, 5.41446672e-02, 9.45855333e-01]), 1: array([1.00000000e+00, 1.51331684e-11, 2.74698828e-69]), 0: array([1.00000000e+00, 1.47998123e-11, 1.19941400e-69])}, 2: {4: array([4.35656667e-09, 9.99999996e-01, 1.09170042e-17]), 3: array([1.00000000e+00, 3.74872937e-11, 1.26778780e-72]), 2: array([1.00000000e+00, 2.64334228e-14, 1.88643070e-87]), 1: array([4.95859156e-16, 1.26677287e-02, 9.87332271e-01]), 0: array([1.0000000e+00, 5.4690500e-12, 9.2633706e-75])}, 3: {4: array([9.99999998e-01, 1.95818191e-09, 3.00461747e-63]), 3: array([1.00000000e+00, 4.03701523e-11, 8.06052631e-68]), 2: array([1.00000000e+00, 5.62968341e-13, 3.32648594e-78]), 1: array([4.81654356e-14, 2.44585619e-02, 9.75541438e-01]), 0: array([1.14853183e-14, 7.83315209e-02, 9.21668479e-01])}, 4: {5: array([9.99988560e-01, 1.14395947e-05, 4.73873925e-36]), 4: array([1.86638603e-13, 9.97658219e-01, 2.34178130e-03]), 3: array([1.75692346e-13, 9.96094279e-01, 3.90572071e-03]), 2: array([1.76700783e-13, 9.95169931e-01, 4.83006910e-03]), 1: array([1.00000000e+000, 3.82750006e-016, 2.30159195e-109]), 0: array([1.00000000e+000, 1.59054984e-016, 1.81315570e-101])}, 5: {3: array([1.29128503e-13, 9.99999812e-01, 1.88495386e-07]), 2: array([1.00000000e+00, 7.66632263e-15, 2.74311877e-94]), 1: array([1.00000000e+000, 4.53234929e-016, 1.19242512e-115]), 0: array([1.00000000e+000, 2.50819622e-016, 3.72425835e-101])}, 6: {5: array([1.00000000e+00, 1.38970078e-11, 4.29145617e-69]), 4: array([8.89610316e-15, 8.21817900e-02, 9.17818210e-01]), 3: array([1.00000000e+00, 1.42011729e-11, 3.90664219e-69]), 2: array([1.00000000e+00, 1.43308068e-11, 3.70761872e-69]), 1: array([1.00000000e+00, 1.47236625e-11, 3.07758788e-69]), 0: array([1.00000000e+00, 1.43069989e-11, 1.82856173e-69])}, 7: {6: array([4.82474341e-11, 9.99999992e-01, 7.66898060e-09]), 5: array([1.00000000e+00, 1.76829020e-10, 5.02714119e-72]), 4: array([1.00000000e+00, 2.28096429e-13, 7.22529567e-86]), 3: array([1.00000000e+00, 1.08069277e-12, 3.12193645e-76]), 2: array([1.62847513e-13, 3.10389796e-02, 9.68961020e-01]), 1: array([1.09145673e-12, 9.62205149e-01, 3.77948506e-02]), 0: array([1.00000000e+00, 3.81376675e-11, 4.28219215e-77])}, 8: {5: array([5.01384604e-09, 9.99989835e-01, 1.01595200e-05]), 4: array([3.01320499e-13, 9.99999988e-01, 1.23679497e-08]), 3: array([1.18695852e-11, 9.99999997e-01, 3.08365999e-09]), 2: array([5.24488915e-15, 1.17727316e-01, 8.82272684e-01]), 1: array([1.00000000e+00, 4.56621937e-11, 3.27698225e-65]), 0: array([1.00000000e+000, 3.56723456e-016, 9.49540291e-107])}, 9: {6: array([1.00000000e+00, 3.78432234e-13, 1.05415801e-76]), 5: array([1.97001277e-13, 9.99992249e-01, 7.75107642e-06]), 4: array([2.28144233e-05, 9.99977186e-01, 6.94171018e-39]), 3: array([9.99999235e-01, 7.64939659e-07, 1.75083080e-60]), 2: array([3.36134821e-16, 1.96361268e-02, 9.80363873e-01]), 1: array([2.90371326e-16, 1.45480391e-02, 9.85451961e-01]), 0: array([1.00000000e+000, 2.38777715e-016, 4.09331091e-102])}}
Learning switch conds
-1->1
LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -1.3576158494885346]) 2.1728952216756177e-07
LinearCond([0.0, 0.0, 1.0, 0.0, 0.0, -8.381427222630006]) 3.4742091120572884e-07
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.852439937408757]) 3.6193413987606536e-07
Cond:  LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -1.3576158494885346])
Cost:  2.1728952216756177e-07
-1->0
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 3.7698513594366103]) 4.6185435350104877e-07
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -4.32098573389421]) 5.54079765400724e-07
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, 1.052997402997116]) 7.548569895749112e-07
Cond:  LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 3.7698513594366103])
Cost:  4.6185435350104877e-07
-1->2
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.398325209097207]) 2.0973216669507638e-08
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.180149388883752]) 4.802604703210781e-08
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 4.512567307435105]) 5.80064736374605e-08
Cond:  LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.398325209097207])
Cost:  2.0973216669507638e-08
2->-2
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 5.621815365987741]) 5.814889149254808e-06
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, -0.8278679847726362]) 5.904060348920909e-06
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -9.627524266895563]) 6.888090686801251e-06
Cond:  LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 5.621815365987741])
Cost:  5.814889149254808e-06
2->0
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, 0.3156402280503041]) 11.036354875993775
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.380473482038698]) 18.835780112015854
LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -2.3196527669592815]) 93.50332255053351
Cond:  LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, 0.3156402280503041])
Cost:  11.036354875993775
2->1
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -4.582682004552119]) 3.0900906410341085
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, -2.0046395191562194]) 3.3073837847239034
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, -8.18084053592814]) 3.380411655129708
Cond:  LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -4.582682004552119])
Cost:  3.0900906410341085
0->2
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 0.4801051187278509]) 95.47893401525278
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 0.7220245962230276]) 135.9463772597931
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, -4.649510684650728]) 136.77450559805393
Cond:  LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 0.4801051187278509])
Cost:  95.47893401525278
0->-2
LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -5.461093272864492]) 45.17380055029721
LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -4.786340604639477]) 45.78950065684377
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, -1.8518165752255005]) 49.97280389081288
Cond:  LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -5.461093272864492])
Cost:  45.17380055029721
0->1
LinearCond([0.0, 0.0, 1.0, 0.0, 0.0, -10.050938795820457]) 82.96114050360067
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -0.8137097308641894]) 123.56513739657473
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -2.6889005866861715]) 165.24785304330908
Cond:  LinearCond([0.0, 0.0, 1.0, 0.0, 0.0, -10.050938795820457])
Cost:  82.96114050360067
1->-2
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.932437473208971]) 27.697008232053125
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -9.395452717950299]) 34.32312173143315
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -17.068340465931357]) 49.11861673087877
Cond:  LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.932437473208971])
Cost:  27.697008232053125
1->2
LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -0.9140172630111096]) 25.544579574176034
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 8.006965929528665]) 36.269067763443275
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 6.079111895181805]) 43.94445779924201
Cond:  LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -0.9140172630111096])
Cost:  25.544579574176034
1->0
LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -2.587781689787139]) 43.50760821346075
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.057765993821934]) 46.25933389356079
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, -2.6533720787094754]) 47.61397150942373
Cond:  LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -2.587781689787139])
Cost:  43.50760821346075
Evaluating current SM
SM cost on init states:  58.83765540773645
Total cost:  60.161548852758095
Overall time: 165.57540345191956
Traj opt time: 121.80086970329285
Learn modes time: 0.27226734161376953
Learn conds time: 8.057896375656128
SM eval time: 6.306848526000977
Ref traj sampler time: 0.0
Iteration 1
Get reference trajectories
Best prob cost:  (0.24008007862399802, 0.00033775485362198777, 0.00025543438479263295, 0.00025288538264174696, 0.0002490299116732507, 0.0002344468716861732, 0.00021845222877023087, 0.00021815750306328294, 0.00019741786911725836, 0.00016547904590652753)
Best SM cost:  (76.20204421894395, 1.8039822075762673, 1.8088172228667083, 1.8073927138799233, 1.808134473243813, 1.8065342353007752, 1.7972241442547765, 1.8029927856833434, 1.8076023162508437, 1.8049397033760886)
Best prob:  (1.0, 0.0020518611837767086, 0.0015592851975578647, 0.0015415274691491956, 0.0015191518879979857, 0.001427904462349538, 0.0013181592071363907, 0.0013239964811044768, 0.0012036633312160685, 0.00100624844092542)
Ref modes:  [[[1.7135147703061513], [3.224589746916828]], array([[-0.39241516],
       [-4.69501518]]), array([[-0.39241516],
       [-4.69501518]]), [[-0.3924151567133251], [-4.6950151780087355]], array([[-0.39241516],
       [-4.69501518]]), [[1.7135147703061513], [3.224589746916828]], array([[ 2.64941741],
       [-3.76623822]]), [[2.6494174079369066], [-3.766238218473363]]]
Ref times:  [1.52, 0.0, 0.0, 5.8, 0.0, 0.54, 0.0, 2.08]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f205af60>, None, None, <synth.policy.condition.LinearCond object at 0x7f97f205a080>, None, <synth.policy.condition.LinearCond object at 0x7f97f2138b38>, None, <synth.policy.condition.LinearCond object at 0x7f97f21382b0>]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.42438280809969614, 0.00032995641337461916, 0.0002688501825033365, 0.0002426684947286682, 0.00020186267002984706, 0.00019684809678825938, 0.00018259805584607268, 0.00015109050615887736, 9.246991381790727e-05, 7.644144101230032e-05)
Best SM cost:  (51.52378417540708, 1.7902210275981956, 1.7921574485458587, 1.7886899423277396, 1.7884696964558338, 1.7955187942355006, 1.798486677927825, 1.7928150966006546, 1.817674634775964, 1.7949600954571314)
Best prob:  (1.0, 0.0019770904883361284, 0.0016140659845756146, 0.0014518388945329687, 0.0012074395369042973, 0.0011857741640357953, 0.0011032040514969697, 0.0009076820321320192, 0.0005600688559896692, 0.0004602109936640523)
Ref modes:  [array([[-0.39241516],
       [-4.69501518]]), [[1.7135147703061513], [3.224589746916828]], [[-0.3924151567133251], [-4.6950151780087355]], [[1.7135147703061513], [3.224589746916828]], [[-0.3924151567133251], [-4.6950151780087355]], array([[ 2.64941741],
       [-3.76623822]]), [[1.7135147703061513], [3.224589746916828]], [[2.6494174079369066], [-3.766238218473363]]]
Ref times:  [0.0, 0.8200000000000001, 2.96, 0.68, 2.66, 0.0, 0.64, 2.08]
Ref conds:  [None, <synth.policy.condition.LinearCond object at 0x7f97f20e2c18>, <synth.policy.condition.LinearCond object at 0x7f97f2095160>, <synth.policy.condition.LinearCond object at 0x7f97f20e2c18>, <synth.policy.condition.LinearCond object at 0x7f97f2095160>, None, <synth.policy.condition.LinearCond object at 0x7f97f20afc50>, <synth.policy.condition.LinearCond object at 0x7f97f1feb198>]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.17524209604797109, 0.000278064068701601, 0.00024760716843233357, 0.000206787642703436, 0.00019889263758636063, 0.00018380106393959636, 0.0001833611560105882, 0.0001819381949259842, 0.00018170185095501358, 0.00017173384004290164)
Best SM cost:  (99.70972736707338, 1.7999475266056661, 1.8136926866879057, 1.7929126605743253, 1.796322125262328, 1.7878727080581767, 1.800472947049544, 1.789969861788748, 1.7887053306782108, 1.7978294330446924)
Best prob:  (1.0, 0.0016824377741915875, 0.001645395695655266, 0.0012424059321881082, 0.0011990529247346967, 0.0010987480854693088, 0.0011100170839693428, 0.0010898952861690856, 0.0010871039284522568, 0.0010368839262651515)
Ref modes:  [[[1.7135147703061513], [3.224589746916828]], array([[ 2.64941741],
       [-3.76623822]]), [[-0.3924151567133251], [-4.6950151780087355]], [[1.7135147703061513], [3.224589746916828]], [[-0.3924151567133251], [-4.6950151780087355]], [[1.7135147703061513], [3.224589746916828]], array([[-0.39241516],
       [-4.69501518]]), [[2.6494174079369066], [-3.766238218473363]]]
Ref times:  [0.98, 0.0, 3.58, 0.84, 3.36, 0.02, 0.0, 2.16]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f20ff828>, None, <synth.policy.condition.LinearCond object at 0x7f97f21d2a20>, <synth.policy.condition.LinearCond object at 0x7f97f20ff828>, <synth.policy.condition.LinearCond object at 0x7f97f21d2a20>, <synth.policy.condition.LinearCond object at 0x7f97f31399b0>, None, <synth.policy.condition.LinearCond object at 0x7f97f20dd278>]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.6099395511890501, 0.0003616803459368697, 0.00028697269065231456, 0.0002661878734710561, 0.0002347419634965375, 0.000200351923996451, 0.00019541685122979668, 0.0001843227733488701, 0.00018060427150807173, 0.00016106545413630097)
Best SM cost:  (28.32185500277979, 1.810847644059275, 1.8140218692154562, 1.813917060616167, 1.8142666934605456, 1.8091033791285107, 1.8331265669781875, 1.8135922683015742, 1.8142788635623655, 1.8147376114568525)
Best prob:  (1.0, 0.0022123452778407735, 0.0017609503711932862, 0.0016332373221343917, 0.001440799687050515, 0.0012233873654418513, 0.0012043144362457374, 0.0011305739375229932, 0.001108526745069304, 0.0009890535158729368)
Ref modes:  [array([[1.71351477],
       [3.22458975]]), [[1.7135147703061513], [3.224589746916828]], [[-0.3924151567133251], [-4.6950151780087355]], array([[ 2.64941741],
       [-3.76623822]]), array([[ 2.64941741],
       [-3.76623822]]), [[1.7135147703061513], [3.224589746916828]], array([[1.71351477],
       [3.22458975]]), [[2.6494174079369066], [-3.766238218473363]]]
Ref times:  [0.0, 1.3, 4.9, 0.0, 0.0, 1.12, 0.0, 2.08]
Ref conds:  [None, <synth.policy.condition.LinearCond object at 0x7f97f2065390>, <synth.policy.condition.LinearCond object at 0x7f97f20e2f60>, None, None, <synth.policy.condition.LinearCond object at 0x7f97f20e2b00>, None, <synth.policy.condition.LinearCond object at 0x7f97f20e25f8>]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.8111957507479644, 0.00023770762116049574, 0.00019731801669745796, 0.00017456840406236102, 0.00016995994916222052, 0.00015256759703537954, 0.0001393298166486254, 0.00012533400885715611, 0.0001192302324457442, 0.00011087511424829308)
Best SM cost:  (11.92458843887658, 1.8123885276142822, 1.8031986712037178, 1.8382790095674526, 1.8106377981329613, 1.8084749937956874, 1.799143712604104, 1.812260062613019, 1.873961840331718, 1.8142774560474655)
Best prob:  (1.0, 0.001456264629924475, 0.0011977683503373994, 0.0010748645193899343, 0.001039401779131115, 0.0009310218541819302, 0.0008423432712896612, 0.0007677332231698705, 0.0007369842252975202, 0.0006803977827713558)
Ref modes:  [[[1.7135147703061513], [3.224589746916828]], array([[-0.39241516],
       [-4.69501518]]), [[-0.3924151567133251], [-4.6950151780087355]], array([[-0.39241516],
       [-4.69501518]]), array([[1.71351477],
       [3.22458975]]), [[1.7135147703061513], [3.224589746916828]], [[2.6494174079369066], [-3.766238218473363]], array([[-0.39241516],
       [-4.69501518]])]
Ref times:  [1.24, 0.0, 4.64, 0.0, 0.0, 1.22, 1.9000000000000001, 0.0]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f2051e10>, None, <synth.policy.condition.LinearCond object at 0x7f97f2095940>, None, None, <synth.policy.condition.LinearCond object at 0x7f97f20951d0>, None, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.5722623921739753, 0.0002582728917035826, 0.00024935100515117753, 0.00024264607158874674, 0.00015127561781386008, 0.00010880182264147976, 0.0001033224578680061, 8.399776882024849e-05, 8.332753233019553e-05, 7.754605661009833e-05)
Best SM cost:  (34.32011391164903, 1.7836874474396214, 1.7902545659980018, 1.724406229601093, 1.8092692759353028, 2.01565119022453, 1.7913327757464914, 1.7882292014211798, 120.15934784413608, 1.7824025700408304)
Best prob:  (1.0, 0.0015374864600204556, 0.0014941550305250253, 0.001474405469069612, 0.0009113765594944204, 0.0008848156132809223, 0.0006197942279698492, 0.0005023109942075584, 0.0015865339304381634, 0.0004610352981526983)
Ref modes:  [[[1.7135147703061513], [3.224589746916828]], [[-0.3924151567133251], [-4.6950151780087355]], array([[ 2.64941741],
       [-3.76623822]]), [[1.7135147703061513], [3.224589746916828]], [[-0.3924151567133251], [-4.6950151780087355]], array([[1.71351477],
       [3.22458975]]), [[1.7135147703061513], [3.224589746916828]], [[2.6494174079369066], [-3.766238218473363]]]
Ref times:  [0.76, 2.7, 0.0, 0.62, 2.44, 0.0, 0.84, 2.08]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f2083ac8>, <synth.policy.condition.LinearCond object at 0x7f97f21feb00>, None, <synth.policy.condition.LinearCond object at 0x7f97f2083ac8>, <synth.policy.condition.LinearCond object at 0x7f97f21feb00>, None, <synth.policy.condition.LinearCond object at 0x7f97f2078d30>, <synth.policy.condition.LinearCond object at 0x7f97f2078f98>]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.32981690506591627, 0.0003162107262912889, 0.0002606937852290786, 0.00025843345030080405, 0.0002222933336671293, 0.00021938183913128377, 0.00019703442656916436, 0.00015469402698624658, 0.00012037590715406115, 9.589517972125222e-05)
Best SM cost:  (65.93857516435169, 1.8277693808938178, 1.826663747379487, 1.8326763437621845, 1.8304913594563117, 1.8308112169792068, 1.832563401110549, 2.0248021766125026, 1.8228839715090477, 1.8293180662858126)
Best prob:  (1.0, 0.001967223088535725, 0.0016200466583317901, 0.001615685427482867, 0.0013867098306491162, 0.0013689851614239266, 0.0012316892359640044, 0.001268591019914475, 0.000745237811616204, 0.0005975116510716652)
Ref modes:  [array([[ 2.64941741],
       [-3.76623822]]), array([[1.71351477],
       [3.22458975]]), array([[ 2.64941741],
       [-3.76623822]]), [[1.7135147703061513], [3.224589746916828]], [[-0.3924151567133251], [-4.6950151780087355]], [[1.7135147703061513], [3.224589746916828]], [[2.6494174079369066], [-3.766238218473363]], array([[-0.39241516],
       [-4.69501518]])]
Ref times:  [0.0, 0.0, 0.0, 1.26, 4.66, 0.8200000000000001, 2.08, 0.0]
Ref conds:  [None, None, None, <synth.policy.condition.LinearCond object at 0x7f97f20a1ef0>, <synth.policy.condition.LinearCond object at 0x7f97f20a1ac8>, <synth.policy.condition.LinearCond object at 0x7f97f20957b8>, <synth.policy.condition.LinearCond object at 0x7f97f20957f0>, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.32990768926554614, 0.00035514251049120424, 0.0003322977838141738, 0.00024226023970402434, 0.00024103084589591404, 0.00023584432575216648, 0.00023090770377483426, 0.00022481780729549983, 0.00022247389178461837, 0.00019756431015013047)
Best SM cost:  (63.253077877393906, 1.836641319504861, 1.8036034217409165, 1.809901547796547, 1.8067492802511738, 1.8077709869260055, 1.8059634293509257, 1.8040500577660845, 1.7963466036227125, 1.8026138078796679)
Best prob:  (1.0, 0.002414772760018467, 0.0020179449637024584, 0.0014803255654694564, 0.0014683200407463136, 0.0014381932792839301, 0.0014055465494215572, 0.001365861148329482, 0.0013412487447318723, 0.0011985622113830834)
Ref modes:  [array([[-0.39241516],
       [-4.69501518]]), [[1.7135147703061513], [3.224589746916828]], array([[1.71351477],
       [3.22458975]]), [[-0.3924151567133251], [-4.6950151780087355]], array([[1.71351477],
       [3.22458975]]), [[1.7135147703061513], [3.224589746916828]], array([[ 2.64941741],
       [-3.76623822]]), [[2.6494174079369066], [-3.766238218473363]]]
Ref times:  [0.0, 1.4000000000000001, 0.0, 5.28, 0.0, 0.76, 0.0, 2.08]
Ref conds:  [None, <synth.policy.condition.LinearCond object at 0x7f97f2083080>, None, <synth.policy.condition.LinearCond object at 0x7f97f20dde80>, None, <synth.policy.condition.LinearCond object at 0x7f97f2078cc0>, None, <synth.policy.condition.LinearCond object at 0x7f97f20780b8>]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.32914001588578773, 0.0003911093807478835, 0.0002927724099309818, 0.00028859819430029985, 0.00026423311741533765, 0.0002544734154656318, 0.00021545167206681073, 0.00021152306445962484, 0.0002087449665105594, 0.00020323008517299321)
Best SM cost:  (59.56439029540517, 1.7618260717295637, 1.762335396600014, 1.7660057242175131, 1.7598122155426965, 1.804574037330672, 1.7736124479297342, 1.7593352224321537, 1.7594503972238775, 1.7577867867249328)
Best prob:  (1.0, 0.0022779093254324434, 0.0017060413160977634, 0.0016843821452027202, 0.001535857213719259, 0.0014922995967520595, 0.0012585731102335226, 0.0012288932748641035, 0.0012128929443690002, 0.0011788864063304676)
Ref modes:  [[[1.7135147703061513], [3.224589746916828]], array([[-0.39241516],
       [-4.69501518]]), [[-0.3924151567133251], [-4.6950151780087355]], array([[1.71351477],
       [3.22458975]]), [[1.7135147703061513], [3.224589746916828]], array([[1.71351477],
       [3.22458975]]), [[2.6494174079369066], [-3.766238218473363]], array([[-0.39241516],
       [-4.69501518]])]
Ref times:  [1.54, 0.0, 5.92, 0.0, 0.66, 0.0, 2.08, 0.0]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f2078198>, None, <synth.policy.condition.LinearCond object at 0x7f97f20a17b8>, None, <synth.policy.condition.LinearCond object at 0x7f97f20a1f60>, None, <synth.policy.condition.LinearCond object at 0x7f97f20a1ba8>, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Best prob cost:  (0.19462495924244402, 0.0003211583423926231, 0.00031456222427338106, 0.00024731125687764324, 0.00020341621220897432, 0.00019799199573582212, 0.00018524175244207867, 0.0001411746555039076, 0.0001358974424318717, 0.00010678667120653052)
Best SM cost:  (97.61839762548395, 1.7982138129474539, 1.7977939063026873, 1.8014106737238873, 1.7991808490480885, 1.8105162389826308, 1.7943378134534727, 1.7968431247286456, 1.7963958129661333, 1.801940470218899)
Best prob:  (1.0, 0.0019398154000904275, 0.0018991768117517821, 0.0014985576627534684, 0.001229834683319706, 0.0012053427720977708, 0.0011145428004997945, 0.0008515352868704916, 0.0008193376864648742, 0.0006474059859058907)
Ref modes:  [array([[1.71351477],
       [3.22458975]]), [[1.7135147703061513], [3.224589746916828]], [[-0.3924151567133251], [-4.6950151780087355]], [[1.7135147703061513], [3.224589746916828]], [[-0.3924151567133251], [-4.6950151780087355]], array([[1.71351477],
       [3.22458975]]), [[1.7135147703061513], [3.224589746916828]], [[2.6494174079369066], [-3.766238218473363]]]
Ref times:  [0.0, 0.96, 3.44, 0.84, 3.36, 0.0, 0.02, 2.3000000000000003]
Ref conds:  [None, <synth.policy.condition.LinearCond object at 0x7f97f205a198>, <synth.policy.condition.LinearCond object at 0x7f97f2138f60>, <synth.policy.condition.LinearCond object at 0x7f97f205a198>, <synth.policy.condition.LinearCond object at 0x7f97f2138f60>, None, <synth.policy.condition.LinearCond object at 0x7f97f20f2860>, <synth.policy.condition.LinearCond object at 0x7f97f2065828>]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Init states
[ 1.01181369  5.21        1.55382387 13.32701825]
[ 0.99948982  5.21        1.5529455  12.1254253 ]
[ 1.00313304  5.21        1.55486695 12.37420003]
[ 1.01763162  5.21        1.54807562 12.92996742]
[ 1.01479577  5.21        1.55421871 12.85013572]
[ 0.99269066  5.21        1.56161999 12.01976826]
[ 1.03599713  5.21        1.59689236 12.88817777]
[ 1.00942396  5.21        1.56279626 13.10528111]
[ 0.96628061  5.21        1.53465185 13.35102498]
[ 1.00628332  5.21        1.58841524 12.35221356]
Optimizing trajectories for safe goal
Random inits:  [False, False, False, False, False, False, False, False, False, False]
Mode weights:  [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
Cond weights:  [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
Init cost:  65.0798618641458
Init cost:  27.404064623542475
Init cost:  59.77163381104583
Init cost:  37.35242172464774
Init cost:  151.16341876509549
Init cost:  12.840071034466385
Init cost:  228.40235809311548
Init cost:  48.634367400877544
Init cost:  19.603868849537225
Init cost:  34.231130635610306
0.10978827885289973 1
Init cost:  0.5952694948835591
0.16183463205308424 8
Init cost:  1.1302042229094804
0.07322241231953126 4
Init cost:  0.06776912350322337
0.13605297889365386 9
Init cost:  2.718350440086626
0.09427647855421994 3
Init cost:  0.09427647855421994
0.11047070823607583 7
Final:  0.09338499244881315 1
Init cost:  0.11848201367165657
Final:  0.09684541673016313 8
Final:  0.0942685693311212 3
0.1251542752419722 2
Init cost:  0.1141385336110956
Final:  0.11413845133902323 2
0.09968487461172136 0
Init cost:  0.6604979505236097
Final:  0.12431704119487938 9
Final:  0.06448904665642113 4
Final:  0.08385655876842077 7
Final:  0.09910854291522445 0
0.7115902501211433 6
0.05731174986499715 5
Init cost:  1.1961433806380266
Init cost:  0.11637501580543733
Final:  0.05736723446817176 5
Final:  0.8112117960516549 6
Weights:  [0.9216185410457347, 0.8940653013464736, 1.0, 0.9986396439604923, 1.0, 1.0, 0.002248543182566439, 1.0, 0.9052193287734949, 1.0]
Traj x:  [ 1.32518958e+00  4.60808019e+00 -4.26308264e-01 -4.04516674e+00
  2.25942116e-01 -3.69949587e+00 -6.22777172e-01 -2.88557018e+00
 -8.39016586e-02 -4.67654195e+00  1.90793524e+00  3.68566738e+00
  3.49231820e+00 -4.33840159e+00  1.45750074e+00 -4.16966631e+00
  4.75636483e+00 -1.39292269e-18  2.43198393e-02  8.89652556e+00
  2.62994238e-02  2.73786748e+00  3.02071186e+00  1.81079024e+00]
Traj x:  [ 7.61802519e-01 -4.70508553e+00  1.95513931e+00  3.74293139e+00
 -5.05695425e-01 -4.99941221e+00  2.33075792e+00  3.79667825e+00
 -4.54661753e-01 -4.81521225e+00  2.65780012e+00 -3.77250737e+00
  2.16575302e+00  3.19788645e+00  3.48669737e+00 -3.67383293e+00
  1.71017274e-01  2.03046124e+00  7.25164106e+00  2.36722954e+00
  1.27845430e-02  1.40955151e-05  2.18771858e+00  5.34770170e+00]
Traj x:  [ 1.76307772e+00  4.34722006e+00  2.09911908e+00 -3.83296858e+00
 -4.18656798e-01 -2.37468664e+00  2.69147100e+00  3.22043864e+00
 -9.55512173e-01 -4.93152970e+00  9.23066508e-01  2.76730723e+00
  3.28290932e-01 -4.67630704e+00  3.75115357e+00 -3.86443068e+00
  2.27260283e+00  8.67361738e-22  8.48689781e+00  2.94333004e+00
  8.17961290e+00  1.73472348e-21  0.00000000e+00  5.95612720e+00]
Traj x:  [ 8.77149973e-01  3.17170816e+00  6.43171559e-01  3.54300635e+00
 -3.14159374e-01 -4.74387230e+00  2.65147919e+00 -3.76877172e+00
  2.65145993e+00 -3.76878233e+00  2.32087321e+00  3.28612276e+00
  1.51592717e+00  3.11898914e+00  2.86748395e+00 -3.47171502e+00
  1.05458751e+00  3.82477171e+00  9.28515427e+00 -8.96097355e-21
 -1.85587171e-20  3.16985895e+00  7.33059325e-01  4.76414999e+00]
Traj x:  [ 1.83487794e+00  3.69332778e+00  1.52457295e-01 -4.66308947e+00
 -3.85792527e-01 -4.92002128e+00  2.07146356e-01 -4.68136118e+00
  1.22959418e+00  2.93715812e+00  3.08183182e+00  3.11016933e+00
  3.72828281e+00 -3.50161230e+00 -2.46011973e-01 -4.68262380e+00
  2.26066287e+00 -1.42563212e-18  6.00866467e+00  6.47852688e-19
 -1.10505222e-18  2.83130513e+00  3.95620251e+00 -8.46687590e-19]
Traj x:  [ 2.51479788  3.55893118 -0.70130678 -4.18341379  2.60351741 -3.51963333
  2.86067273  3.43533618 -0.65738701 -4.89711215  1.74301254  3.20092101
  3.80544012  3.88561678  4.78620779 -4.56538414  1.21213495  3.6885146
  0.21396762  0.57780806  3.23439894  0.04587907  1.61066394  2.51774368]
Traj x:  [ 1.12151210e+00 -2.84182113e+00 -1.16771934e-01  2.79163855e+00
  3.10090318e+00 -3.81565407e+00  1.16498666e+00  4.95503365e+00
 -4.39392663e-01 -4.99987301e+00  9.57000335e-01  4.99764349e+00
  1.81179158e+00 -5.00000000e+00  2.44771918e+00 -5.00000000e+00
  3.07282832e-01  2.98553487e+00  2.91024746e-04  3.47407753e+00
  7.79322643e+00  4.98180436e+00  3.45023637e+00  8.96160899e-01]
Traj x:  [-1.52920779e-02 -4.92620295e+00  1.26956000e+00  3.82388651e+00
  3.00916099e-01  3.02769751e+00 -2.09043898e-01 -4.80985592e+00
  1.25607954e+00  3.11868556e+00  2.47449680e+00  3.61129052e+00
  2.73164123e+00 -3.82560460e+00  3.15645924e+00 -3.42715289e+00
  7.67631326e-19  4.55555289e+00  1.80367625e-18  8.17115090e+00
  5.43940580e-19  2.67891035e+00  3.38423282e-17  4.54540099e+00]
Traj x:  [ 2.12736048e+00  5.00000000e+00  1.84047774e+00 -4.78515882e+00
  1.75701515e+00 -3.36105512e+00  3.30431107e-01  1.82831336e+00
  9.81817527e-01  1.84022351e+00  1.79358734e-01  2.16511641e+00
  2.27089965e-01 -9.77287633e-03  2.60397973e-01 -4.61953730e+00
  5.91483303e+00  2.00971955e-01  9.96425024e+00  3.61005018e-19
  3.53007152e+00 -2.53783787e-18 -1.82425871e-18  1.86334930e-02]
Traj x:  [ 1.56702503  2.79190768  0.68526404  3.78656742 -0.37875917 -4.67806101
  1.80535927  2.95919884 -0.44220124 -4.03620932  0.30936144  2.72241142
  0.80003213  2.64685951  3.56036397 -3.06106634  2.32539562  0.09825368
  8.77145348  2.68073605  7.68486331  0.01685692  2.75772053  5.73529629]
Learn mode mapping
Assigning modes
Merging modes
Avg modes:  [ 1.94373891  3.47497877  2.27106313 -3.92585064 -0.46998392 -4.31555767]
Assigning modes
Merging modes
Avg modes:  [ 1.94229469  3.47628613  2.61766385 -3.87749714 -0.49961165 -4.35528794]
Assigning modes
Merging modes
Avg modes:  [ 1.94229469  3.47628613  2.83667083 -3.86221251 -0.49235882 -4.33246395]
Traj 0
[ 1.32518958  4.60808019 -0.62277717 -2.88557018  1.90793524  3.68566738
  3.4923182  -4.33840159  1.45750074 -4.16966631]
[4.75636483 8.89652556 2.73786748 3.02071186 1.81079024]
(4,1,0.999826)->(3,1,1.000000)->(2,0,1.000000)->(1,2,0.949616)->(0,0,1.000000)->
Traj 1
[ 0.76180252 -4.70508553  1.95513931  3.74293139 -0.50569542 -4.99941221
  2.33075792  3.79667825  2.16575302  3.19788645  3.48669737 -3.67383293]
[0.17101727 2.03046124 7.25164106 2.36722954 2.18771858 5.3477017 ]
(5,1,1.000000)->(4,0,1.000000)->(3,0,1.000000)->(2,2,0.988526)->(1,0,1.000000)->(0,1,0.850095)->
Traj 2
[ 1.76307772  4.34722006 -0.4186568  -2.37468664  2.691471    3.22043864
 -0.95551217 -4.9315297   3.75115357 -3.86443068]
[2.27260283 8.48689781 2.94333004 8.1796129  5.9561272 ]
(4,1,1.000000)->(3,2,0.989629)->(2,0,1.000000)->(1,2,0.958661)->(0,0,1.000000)->
Traj 3
[ 0.87714997  3.17170816  0.64317156  3.54300635 -0.31415937 -4.7438723
  2.32087321  3.28612276  1.51592717  3.11898914  2.86748395 -3.47171502]
[1.05458751 3.82477171 9.28515427 3.16985895 0.73305932 4.76414999]
(5,1,1.000000)->(4,0,1.000000)->(3,0,1.000000)->(2,2,0.971979)->(1,0,1.000000)->(0,0,1.000000)->
Traj 4
[ 1.83487794  3.69332778 -0.38579253 -4.92002128  3.08183182  3.11016933
  3.72828281 -3.5016123 ]
[2.26066287 6.00866467 2.83130513 3.95620251]
(3,1,1.000000)->(2,0,1.000000)->(1,2,0.983086)->(0,0,1.000000)->
Traj 5
[ 2.51479788  3.55893118 -0.70130678 -4.18341379  2.60351741 -3.51963333
  2.86067273  3.43533618 -0.65738701 -4.89711215  3.80544012  3.88561678
  4.78620779 -4.56538414]
[1.21213495 3.6885146  0.21396762 0.57780806 3.23439894 1.61066394
 2.51774368]
(6,1,1.000000)->(5,0,1.000000)->(4,2,0.988114)->(3,0,1.000000)->(2,1,1.000000)->(1,2,0.964648)->(0,0,1.000000)->
Traj 6
[ 1.1215121  -2.84182113 -0.11677193  2.79163855  1.16498666  4.95503365
 -0.43939266 -4.99987301  0.95700033  4.99764349  1.81179158 -5.
  2.44771918 -5.        ]
[0.30728283 2.98553487 3.47407753 7.79322643 4.98180436 3.45023637
 0.8961609 ]
(6,1,1.000000)->(5,1,0.999987)->(4,0,1.000000)->(3,2,0.987174)->(2,0,1.000000)->(1,0,1.000000)->(0,1,0.996595)->
Traj 7
[ 1.26956     3.82388651 -0.2090439  -4.80985592  2.4744968   3.61129052
  3.15645924 -3.42715289]
[4.55555289 8.1711509  2.67891035 4.54540099]
(3,1,1.000000)->(2,0,1.000000)->(1,2,0.967518)->(0,0,1.000000)->
Traj 8
[ 2.12736048  5.          1.84047774 -4.78515882  1.75701515 -3.36105512
  0.98181753  1.84022351]
[5.91483303 0.20097196 9.96425024 3.53007152]
(3,0,1.000000)->(2,1,0.999996)->(1,1,0.999994)->(0,0,1.000000)->
Traj 9
[ 1.56702503  2.79190768 -0.37875917 -4.67806101  1.80535927  2.95919884
 -0.44220124 -4.03620932  0.80003213  2.64685951  3.56036397 -3.06106634]
[2.32539562 8.77145348 2.68073605 7.68486331 2.75772053 5.73529629]
(5,1,1.000000)->(4,0,1.000000)->(3,2,0.944115)->(2,0,1.000000)->(1,2,0.972682)->(0,0,1.000000)->
Mode mapping:  {0: {4: array([1.01726175e-31, 9.99825977e-01, 1.74023312e-04]), 3: array([6.64761141e-34, 1.00000000e+00, 1.32527832e-17]), 2: array([1.00000000e+00, 1.83537607e-36, 7.19580610e-28]), 1: array([4.74111330e-24, 5.03836684e-02, 9.49616332e-01]), 0: array([1.00000000e+00, 6.54245945e-45, 2.16398916e-29])}, 1: {5: array([1.23223424e-28, 1.00000000e+00, 8.24933220e-18]), 4: array([1.00000000e+00, 5.42168009e-32, 7.95495879e-27]), 3: array([1.00000000e+00, 2.26085581e-37, 9.22855803e-31]), 2: array([2.53694654e-41, 1.14743154e-02, 9.88525685e-01]), 1: array([1.00000000e+00, 5.61486922e-37, 2.12455133e-28]), 0: array([3.49053330e-36, 8.50095393e-01, 1.49904607e-01])}, 2: {4: array([2.04096261e-30, 1.00000000e+00, 4.52883965e-20]), 3: array([2.21648730e-41, 1.03713888e-02, 9.89628611e-01]), 2: array([1.00000000e+00, 5.48493167e-32, 4.25514841e-30]), 1: array([9.28437704e-20, 4.13387283e-02, 9.58661272e-01]), 0: array([1.00000000e+00, 1.57701583e-42, 2.84132455e-30])}, 3: {5: array([1.53260668e-26, 1.00000000e+00, 5.72984802e-13]), 4: array([1.00000000e+00, 2.40694968e-31, 4.53682999e-23]), 3: array([1.00000000e+00, 9.64629728e-33, 3.63550477e-28]), 2: array([9.58521774e-39, 2.80207377e-02, 9.71979262e-01]), 1: array([1.00000000e+00, 6.28027420e-35, 1.12698892e-21]), 0: array([1.00000000e+00, 1.12719976e-31, 1.21810164e-20])}, 4: {3: array([1.67983027e-27, 1.00000000e+00, 6.19610072e-20]), 2: array([1.00000000e+00, 9.53033065e-31, 3.92428311e-32]), 1: array([2.07576611e-40, 1.69139989e-02, 9.83086001e-01]), 0: array([1.00000000e+00, 1.53354004e-36, 1.58280270e-27])}, 5: {6: array([2.53917547e-37, 1.00000000e+00, 4.70799600e-30]), 5: array([1.00000000e+00, 4.04009363e-37, 2.09483183e-41]), 4: array([1.10547177e-40, 1.18859243e-02, 9.88114076e-01]), 3: array([1.00000000e+00, 7.81384359e-34, 2.75389919e-32]), 2: array([8.87202133e-27, 1.00000000e+00, 4.06746557e-11]), 1: array([1.14431238e-34, 3.53518050e-02, 9.64648195e-01]), 0: array([1.00000000e+00, 3.88469362e-35, 1.06922670e-30])}, 6: {6: array([2.24848823e-38, 9.99999997e-01, 2.65399220e-09]), 5: array([3.21934963e-38, 9.99986704e-01, 1.32958774e-05]), 4: array([1.00000000e+00, 1.99247887e-48, 1.38939445e-29]), 3: array([3.31412872e-41, 1.28262834e-02, 9.87173717e-01]), 2: array([1.00000000e+00, 4.30225862e-48, 3.08392012e-30]), 1: array([1.00000000e+00, 1.27960375e-27, 1.25854298e-15]), 0: array([3.65003872e-21, 9.96594767e-01, 3.40523260e-03])}, 7: {3: array([2.19774167e-26, 1.00000000e+00, 3.78165468e-15]), 2: array([1.00000000e+00, 1.24878164e-35, 1.03667790e-30]), 1: array([4.29303632e-39, 3.24823690e-02, 9.67517631e-01]), 0: array([1.00000000e+00, 1.05561717e-37, 1.74844647e-25])}, 8: {3: array([1.00000000e+00, 7.69962766e-20, 8.12083668e-14]), 2: array([2.79736006e-25, 9.99995922e-01, 4.07813970e-06]), 1: array([1.50426505e-36, 9.99993993e-01, 6.00677713e-06]), 0: array([1.00000000e+00, 1.64273066e-48, 3.99994154e-35])}, 9: {5: array([8.57161495e-24, 1.00000000e+00, 1.93461699e-18]), 4: array([1.00000000e+00, 6.25149459e-27, 1.33918543e-17]), 3: array([5.15635788e-33, 5.58851375e-02, 9.44114862e-01]), 2: array([1.00000000e+00, 6.62841933e-30, 1.17270541e-23]), 1: array([2.62619028e-38, 2.73178687e-02, 9.72682131e-01]), 0: array([1.00000000e+00, 2.07863079e-28, 1.33523915e-21])}}
Learning switch conds
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
-1->0
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.109999987973574]) 0.1792627796852599
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, 0.3028800192760143]) 0.18693887232433418
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -0.0791099018987671]) 0.19289215077858882
Cond:  LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.109999987973574])
Cost:  0.1792627796852599
-1->1
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.110000001146927]) 0.15245634426603133
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.309999998597825]) 0.15245634610310496
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -0.30288000715410357]) 0.1589868682834645
Cond:  LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.110000001146927])
Cost:  0.15245634426603133
-1->2
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.30999999991472]) 0.026806433615405672
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.110000000231105]) 0.02680643484817527
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -0.3028800168320016]) 0.027952007512849236
Cond:  LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.30999999991472])
Cost:  0.026806433615405672
2->0
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, 0.2321654633443872]) 83.1608886130353
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.380473482038698]) 85.02544409563545
LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -1.8279567171793123]) 120.61656810072003
Cond:  LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, 0.2321654633443872])
Cost:  83.1608886130353
2->1
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.201221803904674]) 6.9330038095967215
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -4.582682004552119]) 87.85830070354011
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, -8.18084053592814]) 94.623247219838
Cond:  LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.201221803904674])
Cost:  6.9330038095967215
2->-2
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -10.892776396268129]) 0.006602106001288706
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 5.786047679620706]) 0.00678099099286156
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, -0.6636356711396711]) 0.007686445241757525
Cond:  LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -10.892776396268129])
Cost:  0.006602106001288706
0->2
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 0.5564177251387264]) 211.67021770014503
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -1.8988435440482299]) 357.2959124861311
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -7.065011010173425]) 366.32569498986123
Cond:  LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 0.5564177251387264])
Cost:  211.67021770014503
0->-2
LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -5.461093272864492]) 40.12067215152478
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, -4.518677933948567]) 41.330755943492555
LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -4.786340604639477]) 42.40679472682467
Cond:  LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -5.461093272864492])
Cost:  40.12067215152478
0->1
LinearCond([0.0, 0.0, 1.0, 0.0, 0.0, -10.37986109412192]) 105.74852911471721
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -0.9399597308641894]) 125.29018599831993
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -8.432057904786868]) 189.0316211776951
Cond:  LinearCond([0.0, 0.0, 1.0, 0.0, 0.0, -10.37986109412192])
Cost:  105.74852911471721
1->0
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.889258539564496]) 84.72480076460981
LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -0.21205918728728512]) 112.92199426136744
LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -2.587781689787139]) 116.30859741362546
Cond:  LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.889258539564496])
Cost:  84.72480076460981
1->-2
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.971602006279777]) 48.27758675785276
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 0.4246764942112476]) 94.32033585144653
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -9.395452717950299]) 94.73052775422701
Cond:  LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.971602006279777])
Cost:  48.27758675785276
1->2
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, -1.6923924976441853]) 0.0069613912934459905
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, -0.4654713816051004]) 0.00764330887476868
LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -0.7458043723861096]) 29.735863487680056
Cond:  LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, -1.6923924976441853])
Cost:  0.0069613912934459905
Evaluating current SM
SM cost on init states:  5.437954626933889
Total cost:  12.267044739390599
Overall time: 377.8684968948364
Traj opt time: 304.418329000473
Learn modes time: 0.5416464805603027
Learn conds time: 19.174249410629272
SM eval time: 13.101510524749756
Ref traj sampler time: 11.466949462890625
Iteration 2
Get reference trajectories
Best prob cost:  (0.9107100978524415, 0.0022154091496748183, 0.0015770048194971601, 0.0012061349472215458, 0.0010064772330312184, 0.0008559268947075635, 0.0006470592508629685, 0.00047524632158500133, 0.00043441452526992585, 0.0003940299398070088)
Best SM cost:  (0.0035306564579320326, 1.8247925060229377, 1.8209598723587572, 1.8165958030194236, 1.8288737976057305, 1.826650809514723, 1.8147638300661342, 1.8224963752485948, 1.8340633227171392, 1.8047184574705544)
Best prob:  (1.0, 0.01374162585906746, 0.009744346166473308, 0.007420279994682471, 0.006268456446202629, 0.00531897438316226, 0.003973496427167735, 0.0029410725791149234, 0.002719661024895417, 0.0023954954411669915)
Ref modes:  [[[1.9422946883071552], [3.4762861345427094]], [[-0.49235882338065273], [-4.332463948923487]], [[1.9422946883071552], [3.4762861345427094]], [[2.8366708256237914], [-3.8622125146387996]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]]]
Ref times:  [1.32, 4.7, 0.96, 2.02, 0.0, 0.0, 0.0, 0.0]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f2e32d68>, <synth.policy.condition.LinearCond object at 0x7f97f2e324a8>, <synth.policy.condition.LinearCond object at 0x7f97f358a128>, None, None, None, None, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Diff:  17.759508962973182
Best prob cost:  (0.9101123671144011, 0.0019007153210016186, 0.0018156460714601418, 0.0016526547965011642, 0.0010532554835682823, 0.0010413767349070544, 0.0008230268601779594, 0.0007800335750680268, 0.0007767912739132741, 0.0007271633070779283)
Best SM cost:  (0.005187206748816994, 1.8107752314251755, 1.8124882219417289, 2.2301416816057924, 1.814061040172216, 1.8066060373214168, 1.8030687576544815, 1.8103011947315302, 1.815217018145173, 1.8038544698257595)
Best prob:  (1.0, 0.01162555313076639, 0.011124274234278274, 0.015417830187947935, 0.006463344242029533, 0.006342986146639582, 0.00499532420414064, 0.004768743626164548, 0.004706776320566882, 0.00441695380728131)
Ref modes:  [[[1.9422946883071552], [3.4762861345427094]], [[-0.49235882338065273], [-4.332463948923487]], [[1.9422946883071552], [3.4762861345427094]], [[-0.49235882338065273], [-4.332463948923487]], [[1.9422946883071552], [3.4762861345427094]], [[2.8366708256237914], [-3.8622125146387996]], [[0.0], [0.0]], [[0.0], [0.0]]]
Ref times:  [0.7000000000000001, 2.42, 0.6, 2.12, 1.04, 2.02, 0.0, 0.0]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f2e326a0>, <synth.policy.condition.LinearCond object at 0x7f97f2e32940>, <synth.policy.condition.LinearCond object at 0x7f97f2e326a0>, <synth.policy.condition.LinearCond object at 0x7f97f2e32940>, <synth.policy.condition.LinearCond object at 0x7f97f2e323c8>, None, None, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Diff:  24.07463807538771
Best prob cost:  (0.8080796566850601, 0.0017109818901744462, 0.0015249364418131732, 0.0013274282659132993, 0.001302682822545006, 0.0012260596845509325, 0.001200622400223365, 0.0011578747992778751, 0.0009455980945399661, 0.0009153934402824857)
Best SM cost:  (11.168405109854186, 1.8127376837922264, 1.8145043365408668, 1.8148272373976921, 1.8178104588097979, 1.8134013861510296, 1.8109318868401383, 1.815730963118893, 1.8285314123260568, 1.8142991477274861)
Best prob:  (1.0, 0.010485623141445782, 0.009361982449583157, 0.008152060138947342, 0.008023994028092733, 0.007518802662118124, 0.007344648670609979, 0.007117220132498428, 0.005783562103700313, 0.0056186860126003985)
Ref modes:  [[[1.9422946883071552], [3.4762861345427094]], array([[ 2.83667083],
       [-3.86221251]]), [[-0.49235882338065273], [-4.332463948923487]], [[1.9422946883071552], [3.4762861345427094]], [[-0.49235882338065273], [-4.332463948923487]], [[1.9422946883071552], [3.4762861345427094]], array([[ 2.83667083],
       [-3.86221251]]), [[2.8366708256237914], [-3.8622125146387996]]]
Ref times:  [0.8200000000000001, 0.0, 2.86, 0.76, 2.7, 0.42, 0.0, 2.02]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f2e32710>, None, <synth.policy.condition.LinearCond object at 0x7f97f2e32cf8>, <synth.policy.condition.LinearCond object at 0x7f97f2e32710>, <synth.policy.condition.LinearCond object at 0x7f97f2e32cf8>, <synth.policy.condition.LinearCond object at 0x7f97f2e32e80>, None, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Diff:  4.520420841530726
Best prob cost:  (0.9181507112086326, 0.002229422474884738, 0.0018580109939456452, 0.0016777277137336355, 0.0015483126275117442, 0.0015449862826033885, 0.001439223458225599, 0.0009559692021002228, 0.0007624536058626648, 0.00040212854028970314)
Best SM cost:  (0.0005937284067471932, 1.8332034287378927, 1.8275126361412966, 1.824199475587407, 1.8240098616560605, 1.8303225454421987, 1.831525604520602, 1.8329220109602182, 1.840943472410571, 1.8261234824215393)
Best prob:  (1.0, 0.013945348346505385, 0.01155616653468559, 0.010400353564233297, 0.009596280468432375, 0.009636303465795438, 0.00898745132818627, 0.005978038051719954, 0.00480631104464961, 0.002497624282120074)
Ref modes:  [[[1.9422946883071552], [3.4762861345427094]], [[-0.49235882338065273], [-4.332463948923487]], [[1.9422946883071552], [3.4762861345427094]], [[2.8366708256237914], [-3.8622125146387996]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]]]
Ref times:  [1.1, 3.88, 1.48, 2.02, 0.0, 0.0, 0.0, 0.0]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f358a080>, <synth.policy.condition.LinearCond object at 0x7f97f2e32978>, <synth.policy.condition.LinearCond object at 0x7f97f35b6d68>, None, None, None, None, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Diff:  19.149474221609815
Best prob cost:  (0.9201670953964773, 0.0013765432759820504, 0.001336555805792262, 0.0012250216555367876, 0.0011957855780342639, 0.00107579499380179, 0.0010746683713968779, 0.0007361183101227865, 0.000701530327996221, 0.0006801564030596731)
Best SM cost:  (0.0, 1.8340460160864707, 1.8256210866565816, 1.8239256723863995, 1.8349656024058312, 1.8269173290603273, 1.8232717493422483, 1.828208014678797, 1.8303232833966963, 1.8225573127105101)
Best prob:  (1.0, 0.008617728202419874, 0.00829719161209507, 0.0075919174974890345, 0.0074929978112875835, 0.0066870795983031825, 0.0066557681628165895, 0.004581578497955544, 0.004375549605742139, 0.0042094197430925925)
Ref modes:  [[[1.9422946883071552], [3.4762861345427094]], [[-0.49235882338065273], [-4.332463948923487]], [[1.9422946883071552], [3.4762861345427094]], [[2.8366708256237914], [-3.8622125146387996]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]]]
Ref times:  [1.06, 3.72, 1.52, 2.02, 0.0, 0.0, 0.0, 0.0]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f359b6d8>, <synth.policy.condition.LinearCond object at 0x7f97f2e9d0f0>, <synth.policy.condition.LinearCond object at 0x7f97f2e9d828>, None, None, None, None, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Diff:  17.799994586360423
Best prob cost:  (0.9124764349401913, 0.0013023640715081179, 0.0012788118743559782, 0.0011893460522464246, 0.001043775920997058, 0.0009003848086702088, 0.0008718147899403816, 0.000739199805194447, 0.0003148291741673095, 0.00031048611056996015)
Best SM cost:  (0.005793018582033391, 1.8052468141303246, 1.8046444638147694, 1.8028116892495865, 1.8031894243918736, 1.806447973489225, 1.8044292575342284, 1.8112063235327573, 1.7879979226679872, 1.8021527065959542)
Best prob:  (1.0, 0.007921875185464416, 0.007773930462588313, 0.007216826471524617, 0.006335915106041252, 0.005483342891325187, 0.005298644234612223, 0.0045231981608004025, 0.001882259338679492, 0.001882755877057737)
Ref modes:  [[[1.9422946883071552], [3.4762861345427094]], [[-0.49235882338065273], [-4.332463948923487]], [[1.9422946883071552], [3.4762861345427094]], [[-0.49235882338065273], [-4.332463948923487]], [[1.9422946883071552], [3.4762861345427094]], [[2.8366708256237914], [-3.8622125146387996]], [[0.0], [0.0]], [[0.0], [0.0]]]
Ref times:  [0.64, 2.2, 0.56, 1.96, 1.2, 2.02, 0.0, 0.0]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f2e32ef0>, <synth.policy.condition.LinearCond object at 0x7f97f2e327b8>, <synth.policy.condition.LinearCond object at 0x7f97f2e32ef0>, <synth.policy.condition.LinearCond object at 0x7f97f2e327b8>, <synth.policy.condition.LinearCond object at 0x7f97f2e90dd8>, None, None, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Diff:  20.14452933288848
Best prob cost:  (0.9173538708954121, 0.002165992675847297, 0.0017745129331399087, 0.0014311199877625087, 0.0011587522811868586, 0.0008753605434796311, 0.0005720358772658778, 0.00055476969721328, 0.0005010314456263917, 0.00035897017064368724)
Best SM cost:  (0.0058619805168737965, 1.8490654022340933, 1.8443778528188706, 1.845227567390035, 1.846969506614274, 1.851725892625522, 2.1602103372345898, 1.8579101523878123, 10.278971957914806, 1.8402353921095096)
Best prob:  (1.0, 0.013765206900434307, 0.01122455550550743, 0.009060143088291842, 0.007348625678115916, 0.00557786710917771, 0.00503320405385363, 0.0035161442894785042, 0.0033144149905362493, 0.0022612537317600154)
Ref modes:  [[[1.9422946883071552], [3.4762861345427094]], [[-0.49235882338065273], [-4.332463948923487]], [[1.9422946883071552], [3.4762861345427094]], [[2.8366708256237914], [-3.8622125146387996]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]]]
Ref times:  [1.08, 3.74, 1.2, 2.02, 0.0, 0.0, 0.0, 0.0]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f2e75748>, <synth.policy.condition.LinearCond object at 0x7f97f2e90a90>, <synth.policy.condition.LinearCond object at 0x7f97f2e90748>, None, None, None, None, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Diff:  23.44958156584505
Best prob cost:  (0.9158294515315087, 0.0020878838663888686, 0.0019505485670079962, 0.0017015495053174978, 0.0014226682968267383, 0.001331854909100979, 0.0012630255941671862, 0.0011458287191333707, 0.001004774195394522, 0.0009242431537115285)
Best SM cost:  (0.001725119927577165, 1.8180271307791331, 1.8222717362164496, 1.8241839401673547, 1.824071299234821, 1.8233454688454, 1.8211938573412594, 1.823041002662653, 1.819359092374916, 1.819485274965499)
Best prob:  (1.0, 0.012863298510095345, 0.01206830248033761, 0.010547862679801666, 0.00881809173340841, 0.008249215524856298, 0.00780608817963412, 0.007094849867336992, 0.006198590499664443, 0.005702502915103468)
Ref modes:  [[[1.9422946883071552], [3.4762861345427094]], [[-0.49235882338065273], [-4.332463948923487]], [[1.9422946883071552], [3.4762861345427094]], [[2.8366708256237914], [-3.8622125146387996]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]]]
Ref times:  [1.2, 4.24, 1.16, 2.02, 0.0, 0.0, 0.0, 0.0]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f35b64a8>, <synth.policy.condition.LinearCond object at 0x7f97f2e751d0>, <synth.policy.condition.LinearCond object at 0x7f97f2eaef60>, None, None, None, None, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Diff:  18.932128113196406
Best prob cost:  (0.9126525768465861, 0.0017149789233563153, 0.0015700035563125294, 0.0014808814879840445, 0.0009848806101217327, 0.0009332492262074451, 0.0009091961944256589, 0.0007878672475435171, 0.0007476618205771226, 0.0006581118153507802)
Best SM cost:  (0.0, 1.7829115771066875, 1.777718358297839, 1.7779078793870586, 1.774639418888746, 1.7772240446308896, 1.775779541153288, 1.784899214643659, 1.7734348469612153, 1.7739586918003543)
Best prob:  (1.0, 0.010201271486503405, 0.00929053595553124, 0.008764814810477075, 0.005810139411869334, 0.005519796834710594, 0.005369770491053661, 0.004695823721183601, 0.00440539678857247, 0.003879779266155419)
Ref modes:  [[[1.9422946883071552], [3.4762861345427094]], [[-0.49235882338065273], [-4.332463948923487]], [[1.9422946883071552], [3.4762861345427094]], [[2.8366708256237914], [-3.8622125146387996]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]], [[0.0], [0.0]]]
Ref times:  [1.32, 4.72, 1.08, 2.02, 0.0, 0.0, 0.0, 0.0]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f2eae320>, <synth.policy.condition.LinearCond object at 0x7f97f2eae940>, <synth.policy.condition.LinearCond object at 0x7f97f2e9d4e0>, None, None, None, None, None]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Diff:  19.710289126434887
Best prob cost:  (0.46709272069136404, 0.0017075166651101354, 0.0016994731909384362, 0.0015637031148112656, 0.0009985156678442276, 0.000904018214879443, 0.0008044963038627149, 0.0007147559451965032, 0.0006438326049193476, 0.0005965335102635554)
Best SM cost:  (43.18844944884472, 1.8139983090957947, 1.8132606469360801, 1.8167733372929074, 1.8152921739926278, 1.8210567787967076, 1.8267640934777265, 1.8273008287995782, 9.68561579673859, 1.8180010491833383)
Best prob:  (1.0, 0.010477586760777976, 0.010420541082599617, 0.009621788258965747, 0.006134979515034089, 0.00558648902925002, 0.004999936371179188, 0.004390423614936469, 0.012773794959970846, 0.003675103105929021)
Ref modes:  [[[1.9422946883071552], [3.4762861345427094]], [[-0.49235882338065273], [-4.332463948923487]], [[1.9422946883071552], [3.4762861345427094]], array([[1.94229469],
       [3.47628613]]), [[-0.49235882338065273], [-4.332463948923487]], [[1.9422946883071552], [3.4762861345427094]], array([[ 2.83667083],
       [-3.86221251]]), [[2.8366708256237914], [-3.8622125146387996]]]
Ref times:  [0.8, 2.74, 0.74, 0.0, 2.64, 0.26, 0.0, 2.14]
Ref conds:  [<synth.policy.condition.LinearCond object at 0x7f97f2e9d320>, <synth.policy.condition.LinearCond object at 0x7f97f2e9d400>, <synth.policy.condition.LinearCond object at 0x7f97f2e9d320>, None, <synth.policy.condition.LinearCond object at 0x7f97f2e9d400>, <synth.policy.condition.LinearCond object at 0x7f97f2e9d470>, None, <synth.policy.condition.LinearCond object at 0x7f97f2e9d978>]
Ref cond noises:  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Diff:  17.169622941720178
Init states
[ 1.01181369  5.21        1.55382387 13.32701825]
[ 0.99948982  5.21        1.5529455  12.1254253 ]
[ 1.00313304  5.21        1.55486695 12.37420003]
[ 1.01763162  5.21        1.54807562 12.92996742]
[ 1.01479577  5.21        1.55421871 12.85013572]
[ 0.99269066  5.21        1.56161999 12.01976826]
[ 1.03599713  5.21        1.59689236 12.88817777]
[ 1.00942396  5.21        1.56279626 13.10528111]
[ 0.96628061  5.21        1.53465185 13.35102498]
[ 1.00628332  5.21        1.58841524 12.35221356]
Optimizing trajectories for safe goal
Random inits:  [False, False, False, False, False, False, False, False, False, False]
Mode weights:  [0.01, 1.0, 0.01, 1.0, 1.0, 1.0, 1.0, 1.0, 0.01, 0.01]
Cond weights:  [0.01, 1.0, 0.01, 1.0, 1.0, 1.0, 1.0, 1.0, 0.01, 0.01]
Init cost:  0.16566315592411218
Init cost:  0.1724145429779282
Init cost:  0.14945533583796172
Init cost:  51.35488169193792
Init cost:  0.14476753458769845
Init cost:  3.9401331051287936
Init cost:  0.1537032892404233
Init cost:  0.1997461406373477
Init cost:  0.44937653816438566
Init cost:  15.533615294937693
0.1997461406373477 7
0.14476753458769845 4
Init cost:  0.1997461406373477
Init cost:  0.14476753458769845
Final:  0.1997461406373477 7
Final:  0.14476753458769845 4
0.16516431925302646 3
Init cost:  0.16516431925302646
0.08528246671740454 8
0.14833206208157787 6
Init cost:  0.08528246671740454
Init cost:  0.14833206208157787
Final:  0.08528186113948107 8
Final:  0.14833152000710542 6
0.16744038700313035 1
Init cost:  0.16744038700313035
Final:  0.16510501989159654 3
Final:  0.16744032831101624 1
0.09639914566012413 2
Init cost:  0.4724447060302739
0.14404438240711262 5
Init cost:  0.14404438240711262
Final:  0.14404366337541397 5
0.08077348586699977 0
Init cost:  0.08077348586699977
0.07966467200938333 9
Init cost:  0.07966337453244525
Final:  0.07053772241107963 2
Final:  0.07966328071700984 9
Final:  0.08001928518325997 0
Weights:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
Traj x:  [ 2.07970377e+00  3.53658231e+00 -5.15184723e-01 -4.37455502e+00
  2.15714540e+00  3.51454813e+00  2.97769625e+00 -3.80427882e+00
 -8.85917077e-05  2.57349667e-06  2.59748082e-05  1.76539784e-04
  1.78632123e-05  2.61380920e-05  2.09617710e-04 -3.03655981e-04
  3.00198749e+00  9.63791429e+00  2.23658317e+00  4.67809078e+00
 -2.19919482e-18 -1.52213225e-18 -3.53756087e-19  1.02366032e-20]
Traj x:  [ 1.94191015e+00  3.47602464e+00 -4.90868953e-01 -4.33235720e+00
  1.94195327e+00  3.47605641e+00 -4.91108281e-01 -4.33238076e+00
  1.94173914e+00  3.47594012e+00  2.83747913e+00 -3.86296539e+00
 -6.55517265e-05 -6.41398962e-05 -6.41735228e-05 -6.64093228e-05
  1.74947183e+00  6.04927339e+00  1.49951746e+00  5.29939851e+00
  2.59903511e+00  5.05009491e+00  8.67361738e-24  0.00000000e+00]
Traj x:  [ 2.37823772e+00  3.77499282e+00  2.78844344e+00 -3.82487775e+00
 -5.89862739e-01 -4.22782152e+00  2.24741948e+00  3.66477285e+00
 -5.46317760e-01 -4.44850652e+00  2.15953158e+00  3.56413693e+00
  2.84323573e+00 -3.86722422e+00  3.14997938e+00 -3.82166495e+00
  2.02201661e+00 -1.21223470e-19  6.79000508e+00  1.79428317e+00
  8.84483045e-03  1.11389270e+00  4.37847596e-19  4.76436295e+00]
Traj x:  [ 1.94224709e+00  3.47623549e+00 -4.92177167e-01 -4.33244375e+00
  1.94220440e+00  3.47622062e+00  2.83675027e+00 -3.86228297e+00
 -1.30942506e-05 -2.24210148e-05 -8.80131279e-06 -4.01126932e-07
 -1.19332042e-05 -1.27934372e-05 -1.14736572e-05 -1.88250524e-05
  2.75014974e+00  9.69997191e+00  3.70009374e+00  5.05032394e+00
  1.64651279e-20 -3.73659437e-21 -1.91504798e-20 -1.69482484e-20]
Traj x:  [ 1.94229469  3.47628613 -0.49235882 -4.33246395  1.94229469  3.47628613
  2.83667083 -3.86221251  0.          0.          0.          0.
  0.          0.          0.          0.          2.65        9.3
  3.8         5.05        0.          0.          0.          0.        ]
Traj x:  [ 1.94304317e+00  3.47621613e+00 -4.88141336e-01 -4.33255669e+00
  1.94270590e+00  3.47626718e+00 -4.90977028e-01 -4.33248657e+00
  1.94196973e+00  3.47616257e+00  2.83696718e+00 -3.86249633e+00
 -3.80170258e-05  5.91804697e-05  4.71344928e-05 -2.39291143e-05
  1.60074227e+00  5.49972420e+00  1.40003804e+00  4.89994050e+00
  2.99876345e+00  5.04981898e+00 -8.67361738e-23  8.67361738e-23]
Traj x:  [ 1.93958998e+00  3.47493223e+00 -4.93279790e-01 -4.33196510e+00
  1.94023828e+00  3.47479976e+00  2.84030068e+00 -3.86537606e+00
 -4.20334279e-04 -3.27628090e-04 -1.65876274e-04 -6.20128768e-04
 -2.63658099e-04 -3.04767186e-04 -4.40435337e-04 -2.96145482e-04
  2.69877728e+00  9.34897746e+00  2.99945483e+00  5.04829373e+00
 -8.67361738e-23  1.73472348e-22  0.00000000e+00  8.67361738e-23]
Traj x:  [ 1.94229469  3.47628613 -0.49235882 -4.33246395  1.94229469  3.47628613
  2.83667083 -3.86221251  0.          0.          0.          0.
  0.          0.          0.          0.          3.         10.6
  2.9         5.05        0.          0.          0.          0.        ]
Traj x:  [ 1.94354861e+00  3.47695410e+00 -4.94979221e-01 -4.33275000e+00
  1.94363506e+00  3.47693475e+00  2.83758443e+00 -3.85837629e+00
 -1.12123389e-06  2.32305111e-06  3.45589062e-06 -2.74572064e-06
 -9.94030911e-06  2.31444076e-07 -6.14000939e-06 -4.18444871e-06
  3.26997368e+00  9.97883824e+00  2.67069476e+00  5.01834833e+00
 -2.60208521e-20  8.67361738e-21 -1.73472348e-20  8.67361738e-21]
Traj x:  [ 2.95148676e+00  3.77916294e+00 -7.36978165e-01 -4.66927547e+00
  2.91333909e+00  3.73324803e+00  1.80751812e+00  3.40630901e+00
 -7.11634175e-01 -4.63430847e+00  2.30166477e+00  3.45519114e+00
  2.92584392e+00 -3.93167004e+00  4.06230153e+00 -3.92568441e+00
  1.50628999e+00  5.30409344e+00  1.46654463e+00  8.67361738e-22
  5.13515842e+00  9.19548791e-01 -1.73472348e-21  4.75360022e+00]
Learn mode mapping
Assigning modes
Merging modes
Avg modes:  [ 2.09441485  3.52515547 -0.5300832  -4.37900188  2.12116417 -3.97357526]
Assigning modes
Merging modes
Avg modes:  [ 2.0942705   3.52668849 -0.53797515 -4.37845916  2.74708919 -3.89475472]
Assigning modes
Merging modes
Avg modes:  [ 2.0942705   3.52668849 -0.53694105 -4.3767916   3.00086462 -3.85935348]
Traj 0
[ 2.07970377  3.53658231 -0.51518472 -4.37455502  2.1571454   3.51454813
  2.97769625 -3.80427882]
[3.00198749 9.63791429 2.23658317 4.67809078]
(3,2,1.000000)->(2,0,1.000000)->(1,1,0.999075)->(0,0,1.000000)->
Traj 1
[ 1.94191015  3.47602464 -0.49086895 -4.3323572   1.94195327  3.47605641
 -0.49110828 -4.33238076  1.94173914  3.47594012  2.83747913 -3.86296539]
[1.74947183 6.04927339 1.49951746 5.29939851 2.59903511 5.05009491]
(5,2,1.000000)->(4,0,1.000000)->(3,1,0.998885)->(2,0,1.000000)->(1,1,0.998884)->(0,0,1.000000)->
Traj 2
[ 2.37823772  3.77499282 -0.58986274 -4.22782152  2.24741948  3.66477285
  2.15953158  3.56413693  3.14997938 -3.82166495]
[2.02201661 6.79000508 1.79428317 1.1138927  4.76436295]
(4,2,1.000000)->(3,0,1.000000)->(2,0,1.000000)->(1,1,0.998972)->(0,0,1.000000)->
Traj 3
[ 1.94224709  3.47623549 -0.49217717 -4.33244375  1.9422044   3.47622062
  2.83675027 -3.86228297]
[2.75014974 9.69997191 3.70009374 5.05032394]
(3,2,1.000000)->(2,0,1.000000)->(1,1,0.998890)->(0,0,1.000000)->
Traj 4
[ 1.94229469  3.47628613 -0.49235882 -4.33246395  1.94229469  3.47628613
  2.83667083 -3.86221251]
[2.65 9.3  3.8  5.05]
(3,2,1.000000)->(2,0,1.000000)->(1,1,0.998890)->(0,0,1.000000)->
Traj 5
[ 1.94304317  3.47621613 -0.48814134 -4.33255669  1.9427059   3.47626718
 -0.49097703 -4.33248657  1.94196973  3.47616257  2.83696718 -3.86249633]
[1.60074227 5.4997242  1.40003804 4.8999405  2.99876345 5.04981898]
(5,2,1.000000)->(4,0,1.000000)->(3,1,0.998885)->(2,0,1.000000)->(1,1,0.998874)->(0,0,1.000000)->
Traj 6
[ 1.93958998  3.47493223 -0.49327979 -4.3319651   1.94023828  3.47479976
  2.84030068 -3.86537606]
[2.69877728 9.34897746 2.99945483 5.04829373]
(3,2,1.000000)->(2,0,1.000000)->(1,1,0.998893)->(0,0,1.000000)->
Traj 7
[ 1.94229469  3.47628613 -0.49235882 -4.33246395  1.94229469  3.47628613
  2.83667083 -3.86221251]
[ 3.   10.    2.9   5.05]
(3,2,1.000000)->(2,0,1.000000)->(1,1,0.998890)->(0,0,1.000000)->
Traj 8
[ 1.94354861  3.4769541  -0.49497922 -4.33275     1.94363506  3.47693475
  2.83758443 -3.85837629]
[3.26997368 9.97883824 2.67069476 5.01834833]
(3,2,1.000000)->(2,0,1.000000)->(1,1,0.998901)->(0,0,1.000000)->
Traj 9
[ 2.95148676  3.77916294 -0.73697817 -4.66927547  2.91333909  3.73324803
 -0.71163418 -4.63430847  2.30166477  3.45519114  4.06230153 -3.92568441]
[1.50628999 5.30409344 1.46654463 5.13515842 0.91954879 4.75360022]
(5,2,1.000000)->(4,0,1.000000)->(3,1,0.999731)->(2,0,1.000000)->(1,1,0.999769)->(0,0,1.000000)->
Mode mapping:  {0: {3: array([3.25236061e-59, 4.35788589e-14, 1.00000000e+00]), 2: array([1.00000000e+00, 1.52626086e-76, 4.28862906e-61]), 1: array([1.31367678e-75, 9.99075231e-01, 9.24769192e-04]), 0: array([1.00000000e+00, 1.77026766e-76, 1.78367654e-61])}, 1: {5: array([6.36758183e-60, 5.49432108e-13, 1.00000000e+00]), 4: array([1.0000000e+00, 1.1956284e-74, 1.6144637e-60]), 3: array([9.54945552e-75, 9.98885218e-01, 1.11478156e-03]), 2: array([1.00000000e+00, 1.18679571e-74, 1.60753590e-60]), 1: array([9.58849575e-75, 9.98884200e-01, 1.11579984e-03]), 0: array([1.00000000e+00, 1.18896196e-74, 1.60942764e-60])}, 2: {4: array([7.83035363e-60, 2.16053476e-15, 1.00000000e+00]), 3: array([1.00000000e+00, 2.08332905e-77, 6.82550439e-62]), 2: array([1.00000000e+00, 1.22717575e-79, 1.79731532e-63]), 1: array([1.62328588e-73, 9.98972264e-01, 1.02773600e-03]), 0: array([1.00000000e+00, 2.81290136e-82, 3.68095275e-65])}, 3: {3: array([6.54814527e-60, 5.55276792e-13, 1.00000000e+00]), 2: array([1.00000000e+00, 1.17522716e-74, 1.59779897e-60]), 1: array([9.39268397e-75, 9.98889639e-01, 1.11036133e-03]), 0: array([1.00000000e+00, 1.17387662e-74, 1.59692218e-60])}, 4: {3: array([6.56717447e-60, 5.55922822e-13, 1.00000000e+00]), 2: array([1.0000000e+00, 1.1707957e-74, 1.5939296e-60]), 1: array([9.36278246e-75, 9.98890413e-01, 1.10958690e-03]), 0: array([1.0000000e+00, 1.1707957e-74, 1.5939296e-60])}, 5: {5: array([6.49140571e-60, 5.53544804e-13, 1.00000000e+00]), 4: array([1.00000000e+00, 1.18157044e-74, 1.60121779e-60]), 3: array([9.52603994e-75, 9.98884980e-01, 1.11501999e-03]), 2: array([1.00000000e+00, 1.16534917e-74, 1.59509875e-60]), 1: array([9.86080271e-75, 9.98873785e-01, 1.12621525e-03]), 0: array([1.00000000e+00, 1.16253132e-74, 1.59816328e-60])}, 6: {3: array([5.76341009e-60, 5.27075111e-13, 1.00000000e+00]), 2: array([1.00000000e+00, 1.27570442e-74, 1.68407830e-60]), 1: array([9.43419934e-75, 9.98892722e-01, 1.10727843e-03]), 0: array([1.00000000e+00, 1.27991663e-74, 1.67575248e-60])}, 7: {3: array([6.56717447e-60, 5.55922822e-13, 1.00000000e+00]), 2: array([1.0000000e+00, 1.1707957e-74, 1.5939296e-60]), 1: array([9.36278246e-75, 9.98890413e-01, 1.10958690e-03]), 0: array([1.0000000e+00, 1.1707957e-74, 1.5939296e-60])}, 8: {3: array([7.54682616e-60, 5.42408266e-13, 1.00000000e+00]), 2: array([1.00000000e+00, 1.12120696e-74, 1.55617981e-60]), 1: array([8.94379076e-75, 9.98901494e-01, 1.09850577e-03]), 0: array([1.00000000e+00, 1.12162519e-74, 1.55505256e-60])}, 9: {5: array([3.75023970e-64, 3.85231452e-23, 1.00000000e+00]), 4: array([1.00000000e+00, 2.37951611e-76, 4.62241112e-60]), 3: array([3.44365685e-81, 9.99731229e-01, 2.68771053e-04]), 2: array([1.00000000e+00, 1.27990898e-84, 8.01428765e-64]), 1: array([6.19351223e-82, 9.99769091e-01, 2.30909037e-04]), 0: array([1.00000000e+00, 1.26172918e-85, 1.69895202e-64])}}
Learning switch conds
/scratch/jinala/anaconda3/lib/python3.7/site-packages/scipy/optimize/optimize.py:1046: RuntimeWarning: divide by zero encountered in double_scalars
  rhok = 1.0 / (numpy.dot(yk, sk))
0->-2
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -3.7734559286571834]) 3.668420344409444e-57
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, -4.518677933948567]) 3.873344419253317e-57
LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -5.461093272864492]) 3.8834564834002165e-57
Cond:  LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -3.7734559286571834])
Cost:  3.668420344409444e-57
0->2
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -1.0088691360735824]) 74.34501946672913
LinearCond([0.0, 0.0, 1.0, 0.0, 0.0, -10.35543425576664]) 79.79712656806386
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -2.291094036009069]) 97.408658013865
Cond:  LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -1.0088691360735824])
Cost:  74.34501946672913
0->1
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 0.535640686758721]) 61.94670706109725
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -7.116127000048511]) 221.94597599953076
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -1.9367384830654903]) 229.98722298219363
Cond:  LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, 0.535640686758721])
Cost:  61.94670706109725
1->2
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, -0.4654713816051004]) 5.023908877166445e-58
LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -0.7458043723861096]) 7.438793775364275e-58
LinearCond([0.0, 0.0, 0.0, -1.0, 0.0, -1.6923924976441853]) 8.511830281480687e-58
Cond:  LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, -0.4654713816051004])
Cost:  5.023908877166445e-58
1->-2
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.971602006279777]) 9.897029052817587e-12
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -14.005157876049253]) 3.022791126908229e-11
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -9.395452717950299]) 4.4099611110718936e-11
Cond:  LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 7.971602006279777])
Cost:  9.897029052817587e-12
1->0
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, 0.2544786298113955]) 19.916592954674883
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.386989900817049]) 23.872814548464657
LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -1.7869756624195434]) 123.77801735208685
Cond:  LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, 0.2544786298113955])
Cost:  19.916592954674883
2->1
LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -0.7318066715269804]) 5.766418589472814e-58
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.201221803904674]) 6.0928104716075984e-58
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, -4.582682004552119]) 6.571133321898416e-58
Cond:  LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -0.7318066715269804])
Cost:  5.766418589472814e-58
2->-2
LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 8.097900892455009]) 13.675774322817226
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -7.950312734475004]) 19.895050322883996
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -13.372838298499316]) 26.29123873490255
Cond:  LinearCond([0.0, 0.0, -1.0, 0.0, 0.0, 8.097900892455009])
Cost:  13.675774322817226
2->0
LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, 0.23750851334185102]) 0.023553678665566815
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.386797618278654]) 0.02391777806867874
LinearCond([0.0, 0.0, 0.0, 1.0, 0.0, -1.8586233069162508]) 0.13608328644422013
Cond:  LinearCond([0.0, 0.0, 0.0, 0.0, -1.0, 0.23750851334185102])
Cost:  0.023553678665566815
-1->1
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.109882814044982]) 1.6582121941441338e-74
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.310143262240863]) 1.6584282676160867e-74
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -0.3029960664773272]) 1.739835348140163e-74
Cond:  LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.109882814044982])
Cost:  1.6582121941441338e-74
-1->2
LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.109929144295925]) 2.2811582194826317e-60
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.310078449296976]) 2.2812447997434136e-60
LinearCond([0.0, 0.0, 0.0, 0.0, 1.0, -0.3029315591817411]) 2.392830965024398e-60
Cond:  LinearCond([0.0, -1.0, 0.0, 0.0, 0.0, 5.109929144295925])
Cost:  2.2811582194826317e-60
-1->0
LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -0.8662806057234397]) 0.0
LinearCond([-1.0, 0.0, 0.0, 0.0, 0.0, 2.1276316180994237]) 0.0
LinearCond([0.0, 1.0, 0.0, 0.0, 0.0, -5.109999987973574]) 0.0
Cond:  LinearCond([1.0, 0.0, 0.0, 0.0, 0.0, -0.8662806057234397])
Cost:  0.0
Evaluating current SM
SM cost on init states:  0.0019621220373076745
Total cost:  0.002464677963579491
Min SM cost:  0.002464677963579491

